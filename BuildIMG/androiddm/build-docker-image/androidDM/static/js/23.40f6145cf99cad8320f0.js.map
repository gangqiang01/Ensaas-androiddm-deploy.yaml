{"version":3,"sources":["webpack:///src/components/dockercontrol/servicecontroldetails/history.vue","webpack:///./src/components/dockercontrol/servicecontroldetails/history.vue?bd21","webpack:///./src/components/dockercontrol/servicecontroldetails/history.vue","webpack:///src/components/dockercontrol/servicecontrol.vue","webpack:///./src/components/dockercontrol/servicecontrol.vue?1db2","webpack:///./src/components/dockercontrol/servicecontrol.vue"],"names":["servicecontroldetails_history","name","data","appStatusHistoryTableList","isshow","limit","dataCount","currentPage","multipleSelection","isShowBtnGroup","clearLoading","batchDeleteAppStatusHistory","appStatusApi","intervalTime","isInterval","listLoading","singleInstallType","constant","batchAppType","batchContainerType","statusArray","components","btnGroup","btn_group","props","statusType","default","type","String","selectedAgentId","groupname","methods","selectItem","val","this","checkSelectable","row","status","handleCurrentChange","intervalGetServiceStatusHistory","deleteHistory","aisid","_this","_g","swalInfoDo","$t","then","result","Object","handleResponse","res","$swal","button","handleError","checkAppStatusData","getAppStatusHistoryByGroupname","_this2","console","error","length","assignAppStatusData","getAppStatusHistoryBydevid","_this3","prototype","toString","call","count","isFinish","forEach","$emit","window","clearInterval","timer","_this4","setInterval","filterStatus","value","isArray","resetAppSensor","sensorId","appdata","_this5","deviceStatusApi","reinstall","appItem","_this6","taskname","pkgname","containerId","versionname","target","deviceId","isSuccess","clearAll","_this7","initData","created","beforeDestroy","watch","dockercontrol_servicecontroldetails_history","render","_vm","_h","$createElement","_c","_self","directives","rawName","expression","ref","staticStyle","width","attrs","tooltip-effect","default-sort","prop","order","on","selection-change","filter-change","min-width","selectable","_v","label","scopedSlots","_u","key","fn","scope","_s","_f","ts","column-key","filters","text","filter-placement","height","src","__webpack_require__","alt","_e","staticClass","errorcode","align","size","disabled","click","$event","selectedData","isDelete","isMove","tid","delApi","layout","page-size","current-page","total","background","current-change","staticRenderFns","components_dockercontrol_servicecontroldetails_history","normalizeComponent","ssrContext","servicecontrol","serviceTableData","isDisabledOffDev","isOffline","productname","version","singleServiceType","activeName","keywords","cid","isFixed","offsetTop","content","selectDevice","select_device","selectGroup","select_group","serviceHistory","editor","getSensorStatus","lwm2mMap","obj","JSON","parse","editorInit","getDeviceOption","initContainerInfo","isDisabled","isOfflineDev","handleClick","tab","$route","query","$refs","isFinished","actionComposeSensor","undefined","swalWarnDo","willfunc","openGlobalLoading","composeAction","serviceInfo","Date","getTime","element","id","push","stringify_default","back","$router","go","state","goRouter","path","serviceId","endpoint","showYmlContent","dialogYamlVisible","updateYmlContent","servicedata","projectname","downloadpath","limited","computed","serviceTableList","filter","toLowerCase","includes","isShowSearchInput","removebtndisabled","btnGroupIsShow","dockercontrol_servicecontrol","aria-hidden","placeholder","model","callback","$$v","tab-click","slot","sortable","image","schedulingmode","taskstatus","ports","lang","theme","options","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","tabSize","fontSize","showPrintMargin","init","servicecontrol_Component","servicecontrol_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/23.40f6145cf99cad8320f0.js","sourcesContent":["<template>\n    <div>\n        <el-table\n            :data=\"appStatusHistoryTableList\"\n            tooltip-effect=\"dark\"\n            style=\"width: 100%\"\n            @selection-change=\"selectItem\"\n            @filter-change=\"filterStatus\"\n            :default-sort = \"{prop: 'ts', order: 'descending'}\"\n            ref=\"appStatusHistoryTable\"\n            v-loading=\"listLoading\" \n\n            >\n            <el-table-column\n            type=\"selection\"\n            min-width=\"50\"\n            :selectable=\"checkSelectable\">\n            </el-table-column>\n\n            <el-table-column\n            prop=\"devname\"\n            :label=\"$t('dockerControl.deviceName')\"\n            min-width=\"120\"\n            >\n            </el-table-column>\n\n            <el-table-column\n            prop=\"pkgname\"\n            :label=\"$t('dockerControl.serviceName')\"\n            min-width=\"140\"\n            >\n            </el-table-column>\n\n            <!-- <el-table-column\n            prop=\"versionname\"\n            :label=\"$t('dockerControl.serviceId')\"\n            min-width=\"105\"\n            >\n            </el-table-column> -->\n            \n            <el-table-column\n            :label=\"$t('dockerControl.beginTime')\"\n            min-width=\"130\"\n            prop=\"ts\"\n                >\n                <template slot-scope=\"scope\">\n                    {{scope.row.ts|time}}\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            prop=\"target\"\n            :label=\"$t('dockerControl.function')\"\n            min-width=\"120\"\n            >\n                <template slot-scope=\"scope\">\n                    {{scope.row.target|appStatusFunction}}\n                </template>\n            </el-table-column>\n            <el-table-column\n            column-key=\"status\"\n            prop=\"status\"\n            :label=\"$t('dockerControl.installStatus')\"\n            min-width=\"140\"\n            :filters=\"[{ text: $t('global.success'), value: 2 }, { text: $t('global.failed'), value: 1 }, {text: $t('global.running'), value: 0}]\"\n            filter-placement=\"bottom-end\"\n            >\n                <template slot-scope=\"scope\">\n                    <img src=\"@/assets/imgs/loading1.gif\" alt=\"\" style=\"width:50px;height:10px;\"v-if=\"scope.row.status==0\">\n                    <span v-if=\"scope.row.status==2\" class=\"badge bg-green\">{{$t('global.success')}}</span>\n                    <span v-if=\"scope.row.status==1\" class=\"badge bg-DimGray\">{{$t('global.failed')}}</span>\n                    <!-- {{scope.row.upstatus|AppStatus}} -->\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            :label=\"$t('dockerControl.errorStatus')\"\n            min-width=\"100\"\n            >\n                <template slot-scope=\"scope\">\n                    {{(\"\"+scope.row.errorcode)|appErrorStatus}}\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            :label=\"$t('dockerControl.action')\"\n            min-width=\"175\"\n            align=\"center\">\n                <template slot-scope=\"scope\">\n                    <div>\n                        <el-button-group>\n                            <el-button \n                                size=\"mini\" \n                                type=\"danger\"\n                                @click=\"deleteHistory(scope.row.aisid)\"\n                                :disabled=\"scope.row.status==0\"\n                                >\n                                    {{$t('global.delete')}}\n                            </el-button>\n                            <el-button \n                                size=\"mini\" \n                                type=\"primary\"\n                                @click=\"reinstall(scope.row)\"\n                                :disabled=\"scope.row.status!=1\"\n                                >\n                                    {{$t('dockerControl.repeat')}}\n                            </el-button>\n                        </el-button-group>\n                    </div>\n                </template>\n            </el-table-column>\n\n        </el-table>\n\n        <btn-group \n        :selectedData=\"multipleSelection\" \n        :isDelete=\"true\" \n        :isMove=\"false\" \n        tid=\"aisid\" \n        :delApi=\"batchDeleteAppStatusHistory\" \n        @result=\"isSuccess\" \n        v-show=\"isShowBtnGroup\"\n        class=\"fl m-t-10 cf\">\n        </btn-group>\n\n        <el-button \n        v-loading=\"clearLoading\" \n        size=\"small\" \n        @click=\"clearAll()\" \n        type=\"primary\" \n        class=\"fl m-t-10 cf m-l-10\"\n            v-show=\"isShowBtnGroup\">\n        {{$t('dockerControl.clearAll')}}\n        </el-button>\n\n        <div class=\"m-t-10 cf fr\">\n            <el-pagination\n            @current-change=\"handleCurrentChange\"\n            layout=\"prev, pager, next\"\n            :page-size=\"limit\"\n            :current-page=\"currentPage\"\n            :total=\"dataCount\"\n            v-show=\"isshow\"\n            background\n            >\n            </el-pagination>\n        </div> \n    </div>\n</template>\n<script>\n    import {dockerControl} from '@/assets/js/lwm2mMap'\n    import {reExecDeviceStatus} from '@/components/restfulapi/deviceStatusApi';\n    import{\n    getAppStatusByTypeApi, \n    batchDeleteAppStatusHistoryApi, \n    deleteAppStatusHistoryApi, \n    deleteAppStatusHistoryAllByTypeApi,\n    deleteAppStatusHistoryAllApi,\n    getAppStatusOverviewApi,\n    getAppStatusByTypeAndDevIdApi, \n    getAppStatusByTypeAndGroupApi,\n    getAppStatusByTypeAndPageInGroupApi,\n    getAppStatusByTypeAndPageAndStatusInGroupApi,\n    getAppStatusByTypeAndPageInDevIdApi,\n    getAppStatusByTypeAndPageAndStatusInDevIdApi,\n    deleteAppStatusHistoryAllByDevIdAndTypeApi,\n    deleteAppStatusHistoryAllByGroupAndTypeApi\n    } from \"@/components/restfulapi/appStatusApi\"\n    import {setLocal, getLocal, getSession, checkSession, setSession} from \"../../../assets/js/storage\"\n\n    import handleResponse from '@/components/restfulapi/handleResponse'\n    import btnGroup from \"../../../common/btn-group\";\n    import {getDownloadServerUrlApi} from \"../../restfulapi/serverConfigApi\"\n    import {singleInstallType,  batchAppType, singleComposeType,  batchContainerType, batchImageType, singleServiceType} from \"../../../assets/js/constant\"\n\nexport default {\n    name: 'dockerControlHistory',\n    data() {\n        return {\n\n            appStatusHistoryTableList: [],\n            isshow: false,\n            limit: 10,\n            dataCount: 0,\n            currentPage: 1,\n            multipleSelection: [],\n            isShowBtnGroup: false,\n            clearLoading: false,\n            batchDeleteAppStatusHistory:  batchDeleteAppStatusHistoryApi,\n            intervalTime: 7000,\n\n            isInterval: false,\n            listLoading: false,\n            singleInstallType,\n            batchAppType,\n            batchContainerType,\n            statusArray: [],\n        }\n    },\n\n    components: {\n        btnGroup,\n    },\n\n    props: {\n        statusType: {\n            default: singleServiceType,\n            type: String\n        },\n\n        selectedAgentId: {\n            default: \"\",\n            type: String\n        },\n\n        groupname: {\n            default: \"\",\n            type: String\n        }\n    },\n    methods: {\n        selectItem(val) {\n            this.multipleSelection = val;\n        },\n\n        checkSelectable(row) {\n            return !row.status==0;\n        },\n\n        handleCurrentChange(currentPage){\n            if(currentPage){\n                this.currentPage = currentPage;\n            }else{\n                this.currentPage = 1\n            }\n            this.intervalGetServiceStatusHistory();\n        },\n\n        deleteHistory(aisid){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('global.delete'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                    this.listLoading = true;\n                    deleteAppStatusHistoryApi(aisid).then((data) => {\n                        this.listLoading = false;\n                        handleResponse(data, (res) => {\n                            if(res.status === \"CHANGED\"){\n                                this.$swal(\"\", this.$t('global.success'), \"success\", {button: this.$t('global.confirm')}).then(() => {\n                                        this.intervalGetServiceStatusHistory();\n                                })\n                            }else{\n                                _g.handleError(res);\n                            }\n                        })\n                    })\n                }\n            }) \n        },\n\n        checkAppStatusData(){\n            getAppStatusByTypeAndDevIdApi(this.selectedAgentId, this.statusType)\n        },\n\n        getAppStatusHistoryByGroupname(){\n            if(!this.groupname){\n                console.error(\"[getAppStatusHistoryByGroupname]groupname is empty\")\n            }\n            if(this.isInterval === false){\n                this.listLoading = true;\n            }\n            \n            if(this.statusArray.length > 0){\n                getAppStatusByTypeAndPageAndStatusInGroupApi(this.groupname, this.statusType, this.currentPage, this.limit, this.statusArray).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }else{\n                getAppStatusByTypeAndPageInGroupApi(this.groupname, this.statusType, this.currentPage, this.limit).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }\n            \n        },\n\n        getAppStatusHistoryBydevid(){\n            if(!this.selectedAgentId){\n                console.error(\"[getAppStatusHistoryBydevid]selectedAgentId is empty\")\n                return;\n            }\n\n            if(this.isInterval === false){\n                this.listLoading = true;\n            }\n            if(this.statusArray.length > 0){\n                getAppStatusByTypeAndPageAndStatusInDevIdApi(this.selectedAgentId, this.statusType, this.currentPage, this.limit, this.statusArray).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }else{\n                getAppStatusByTypeAndPageInDevIdApi(this.selectedAgentId, this.statusType, this.currentPage, this.limit).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }\n        },\n\n        assignAppStatusData(res){\n            if(Object.prototype.toString.call(res)  === '[object Object]'&& Object.prototype.toString.call(res.data) === '[object Array]'){\n                this.dataCount = res.count;\n                this.appStatusHistoryTableList = res.data\n                this.isshow = this.dataCount > this.limit;\n                this.isShowBtnGroup = this.dataCount > 0;\n                let isFinish = true;\n\n                res.data.forEach((val) => {\n                    if(val.status == 0){\n                        isFinish = false;\n                    }\n                })\n                if(isFinish){\n                    \n                    this.$emit(\"isFinished\");\n                    \n                    window.clearInterval(_g.timer);\n                    _g.timer = null;\n                }\n            }else{\n                window.clearInterval(_g.timer);\n                _g.timer = null;\n            }\n        },\n\n        intervalGetServiceStatusHistory(){\n            this.getAppStatusHistoryBydevid();\n            if(_g.timer === null){\n                _g.timer = window.setInterval(() => {\n                    this.getAppStatusHistoryBydevid();\n                    this.isInterval = true;\n                },this.intervalTime)\n            }\n        },\n\n\n        filterStatus(value){\n            this.statusArray = value.status;\n            this.currentPage = 1;\n            if(_g.isArray(this.statusArray)){\n                this.intervalGetServiceStatusHistory();\n            }\n        },\n\n        resetAppSensor(sensorId, selectedAgentId, appdata){\n            this.listLoading = true;\n            reExecDeviceStatus(selectedAgentId, sensorId, appdata).then((data) => {\n                this.listLoading = false;\n                handleResponse(data, (res) => {\n                    if(res.status == \"CHANGED\"){\n                        this.currentPage = 1;\n                        this.intervalGetServiceStatusHistory();\n                    }else{\n                        _g.handleError(res)\n                    }\n                })\n                \n            })\n            \n        },\n\n        reinstall(appItem){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('dockerControl.repeat'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                     let appdata = {\n                        taskname: appItem.taskname,\n                        name: appItem.pkgname,\n                        containerId: appItem.versionname,\n                    }\n                    this.resetAppSensor(appItem.target, appItem.deviceId, appdata);\n                }\n            })\n        },\n\n        //delete appstatus $emit\n        isSuccess(result){\n            if(result){\n                this.intervalGetServiceStatusHistory();\n            }\n        },\n\n         //clear All history\n        clearAll(){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('global.clearAll'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                    this.clearLoading = true;\n                    deleteAppStatusHistoryAllByDevIdAndTypeApi(this.selectedAgentId, this.statusType).then((data) => {\n                        this.clearLoading = false;\n                        handleResponse((data), (res) => {\n                            if(res.status === \"CHANGED\"){\n                                this.$swal(\"\", this.$t('global.success'), \"success\", {button: this.$t('global.confirm')}).then(() => {\n                                        this.intervalGetServiceStatusHistory();\n                                })\n                            }else{\n                                _g.handleError(res);\n                            }\n                        })\n                    })\n                }\n            })\n\n        },\n\n        initData(){\n            this.appStatusHistoryTableList = [];\n            this.isShowBtnGroup= false;\n            this.isshow= false;\n            this.isInterval = false;\n            this.currentPage = 1;\n        }\n\n\n    },\n\n    created(){\n        \n    },\n    beforeDestroy() {\n        window.clearInterval(_g.timer);\n        _g.timer = null;\n    },\n\n    watch: {\n        groupname(val){\n            if(val){\n                this.initData();\n                this.checkAppStatusData();\n                this.intervalGetServiceStatusHistory();\n            }  \n　　　　　},\n        selectedAgentId(val){\n            if(val){\n                this.initData();\n                this.checkAppStatusData();\n                this.intervalGetServiceStatusHistory();\n            }  \n　　　　　},\n\n    },\n        \n}\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/colors.scss\";\n    .badge{\n        display: inline-block;\n        min-width: 10px;\n        padding: 5px 8px;\n        font-size: 12px;\n        font-weight: 700;\n        line-height: 1;\n        color: #fff;\n        text-align: center;\n        white-space: nowrap;\n        vertical-align: middle;\n        // background-color: #777;\n        border-radius: 10px;\n    }\n\n    .el-loading-mask{\n        top: 60px !important;\n    }\n\n\n    \n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/dockercontrol/servicecontroldetails/history.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],ref:\"appStatusHistoryTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.appStatusHistoryTableList,\"tooltip-effect\":\"dark\",\"default-sort\":{prop: 'ts', order: 'descending'}},on:{\"selection-change\":_vm.selectItem,\"filter-change\":_vm.filterStatus}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"50\",\"selectable\":_vm.checkSelectable}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"devname\",\"label\":_vm.$t('dockerControl.deviceName'),\"min-width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"pkgname\",\"label\":_vm.$t('dockerControl.serviceName'),\"min-width\":\"140\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('dockerControl.beginTime'),\"min-width\":\"130\",\"prop\":\"ts\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"time\")(scope.row.ts))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"target\",\"label\":_vm.$t('dockerControl.function'),\"min-width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"appStatusFunction\")(scope.row.target))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"column-key\":\"status\",\"prop\":\"status\",\"label\":_vm.$t('dockerControl.installStatus'),\"min-width\":\"140\",\"filters\":[{ text: _vm.$t('global.success'), value: 2 }, { text: _vm.$t('global.failed'), value: 1 }, {text: _vm.$t('global.running'), value: 0}],\"filter-placement\":\"bottom-end\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.status==0)?_c('img',{staticStyle:{\"width\":\"50px\",\"height\":\"10px\"},attrs:{\"src\":require(\"@/assets/imgs/loading1.gif\"),\"alt\":\"\"}}):_vm._e(),_vm._v(\" \"),(scope.row.status==2)?_c('span',{staticClass:\"badge bg-green\"},[_vm._v(_vm._s(_vm.$t('global.success')))]):_vm._e(),_vm._v(\" \"),(scope.row.status==1)?_c('span',{staticClass:\"badge bg-DimGray\"},[_vm._v(_vm._s(_vm.$t('global.failed')))]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('dockerControl.errorStatus'),\"min-width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"appErrorStatus\")((\"\"+scope.row.errorcode)))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('dockerControl.action'),\"min-width\":\"175\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('el-button-group',[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"disabled\":scope.row.status==0},on:{\"click\":function($event){_vm.deleteHistory(scope.row.aisid)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.$t('global.delete'))+\"\\n                        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"disabled\":scope.row.status!=1},on:{\"click\":function($event){_vm.reinstall(scope.row)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.$t('dockerControl.repeat'))+\"\\n                        \")])],1)],1)]}}])})],1),_vm._v(\" \"),_c('btn-group',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowBtnGroup),expression:\"isShowBtnGroup\"}],staticClass:\"fl m-t-10 cf\",attrs:{\"selectedData\":_vm.multipleSelection,\"isDelete\":true,\"isMove\":false,\"tid\":\"aisid\",\"delApi\":_vm.batchDeleteAppStatusHistory},on:{\"result\":_vm.isSuccess}}),_vm._v(\" \"),_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.clearLoading),expression:\"clearLoading\"},{name:\"show\",rawName:\"v-show\",value:(_vm.isShowBtnGroup),expression:\"isShowBtnGroup\"}],staticClass:\"fl m-t-10 cf m-l-10\",attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.clearAll()}}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t('dockerControl.clearAll'))+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"m-t-10 cf fr\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isshow),expression:\"isshow\"}],attrs:{\"layout\":\"prev, pager, next\",\"page-size\":_vm.limit,\"current-page\":_vm.currentPage,\"total\":_vm.dataCount,\"background\":\"\"},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-5a992a50\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/dockercontrol/servicecontroldetails/history.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5a992a50\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./history.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./history.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./history.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5a992a50\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./history.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5a992a50\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/dockercontrol/servicecontroldetails/history.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"content-box\">\n        <div class=\"title-box\">\n            <p class=\"header-line\">\n                <i class=\"fa fa-arrow-left m-r-10 pointer\" aria-hidden=\"true\" @click=\"back()\"></i>\n                {{$t('dockerControl.serviceList')}}\n            </p>\n        </div>\n        <div class=\"select-box\">\n            <div class=\"service-box m-l-10\">\n                <span class=\"label\">{{$t('dockerControl.projectName')}}:</span>\n                <span class=\"cvalue\">{{productname}}</span>\n            </div>\n            <div class=\"service-box m-l-10\">\n                <span class=\"label\">{{$t('dockerControl.version')}}:</span>\n                <span class=\"cvalue\">{{version}}</span>\n            </div>\n        </div>\n        <!-- <div class=\"btn-group\" v-if=\"btnGroupIsShow\" id=\"actionID\" :class=\"{fixedTop: isFixed}\">\n            <el-button-group>\n                <el-button type=\"danger\" size=\"mini\" :disabled=\"removebtndisabled\" @click=\"composeAction('removeService')\">\n                <i class=\"fa fa-trash-o m-r-5\"></i>{{$t('global.remove')}}</el-button>\n            </el-button-group>\n        </div> -->\n        <div class=\"table-box pkgStatusContent\">\n            <div class=\"search\" v-show=\"isShowSearchInput\"> \n                <el-input size=\"small\" class=\"w-250 m-l-10\" v-model=\"keywords\" :placeholder=\"$t('dockerControl.serviceKeywordHolder')\" >  \n                </el-input>\n                <i class=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n            </div>\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n                <el-tab-pane name=\"service\">\n                    <span slot=\"label\">\n                        <i class=\"fa fa-sellsy m-r-5\" aria-hidden=\"listLoading\"></i>\n                        {{$t('dockerControl.service')}}\n                    </span>\n                    <el-table\n                        :data=\"serviceTableList\"\n                        tooltip-effect=\"dark\"\n                        style=\"width: 100%\"\n                        v-loading=\"listLoading\"\n                        @selection-change=\"selectItem\">\n                        <!-- <el-table-column\n                        type=\"selection\"\n                        min-width=\"50\">\n                        </el-table-column> -->\n                        <!-- <el-table-column\n                        label=\"\"\n                        width=\"100\"\n                        >\n                            <template slot-scope=\"scope\">\n                                <div>\n                                    <img src=\"@/assets/imgs/service.png\" alt=\"no img\" style=\"width:48px\"/>\n                                </div>\n                            </template>\n                        </el-table-column> -->\n                        <el-table-column\n                        prop=\"name\"\n                        :label=\"$t('dockerControl.name')\"\n                        min-width=\"90\"\n                        sortable\n                        >\n                            <template slot-scope=\"scope\">\n                                <span class=\"url pointer\" @click=\"goRouter(scope.row)\">\n                                    {{scope.row.name}}\n                                </span>\n                                \n                            </template>\n                        </el-table-column>\n\n                        <el-table-column\n                        prop=\"image\"\n                        :label=\"$t('dockerControl.image')\"\n                        min-width=\"180\">\n                            <template slot-scope=\"scope\"> \n                                <span class=\"pointer url\" @click=\"goRouter(scope.row)\">\n                                    {{scope.row.image}}\n                                    <i class=\"fa fa-pencil-square-o m-l-5\" aria-hidden=\"true\"></i> \n                                </span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column\n                        :label=\"$t('dockerControl.schedulingMode')\"\n                        min-width=\"120\">\n                            <template slot-scope=\"scope\"> \n                                <span class=\"pointer url\" @click=\"goRouter(scope.row)\">\n                                    {{scope.row.schedulingmode}} {{scope.row.taskstatus}}\n                                    <i class=\"fa fa-arrows-v m-l-5\" aria-hidden=\"true\"></i> \n                                </span>\n                            </template>\n                        </el-table-column>\n                    \n                        <el-table-column\n                        prop=\"lastupdate\"\n                        :label=\"$t('dockerControl.lastupdate')\"\n                        min-width=\"120\"\n                        sortable>\n                        </el-table-column>\n                        <el-table-column\n                        :label=\"$t('dockerControl.publishedPort')\"\n                        min-width=\"120\">\n                            <template slot-scope=\"scope\">\n                                {{scope.row.ports|none}}\n                            </template>\n                        </el-table-column>\n                    </el-table>\n                </el-tab-pane>\n                <el-tab-pane name=\"edit\" v-if=\"!limited|| limited == 'false'\">\n                    <span slot=\"label\">\n                        <i class=\"fa fa-pencil-square-o m-r-5\" aria-hidden=\"listLoading\"></i>\n                        {{$t('dockerControl.editComposeFile')}}\n                    </span>\n                    <div class=\"text-center\">\n                        <editor v-model=\"content\" @init=\"editorInit\" lang=\"html\" theme=\"chrome\"  height=\"550\" \n                        :options=\"{\n                        enableBasicAutocompletion: true,\n                        enableSnippets: true,\n                        enableLiveAutocompletion: true,\n                        tabSize:2,\n                        fontSize:14,\n                        showPrintMargin:false,   //去除编辑器里的竖线\n                        }\"></editor>\n                        \n\n                    </div>\n                    <div class=\"m-t-10\">\n                        <el-button type=\"primary\" size=\"small\" @click=\"updateYmlContent('updateSwarmContent')\">{{$t('global.update')}}</el-button>\n                    </div>\n                </el-tab-pane>\n                <el-tab-pane name=\"serviceStatusHistory\">\n                    <span slot=\"label\">\n                        <i class=\"fa fa-history m-r-5\" aria-hidden=\"true\"></i>\n                        {{$t('dockerControl.history')}}\n                    </span>\n                    <service-history\n                    :statusType=\"singleServiceType\"\n                    ref=\"serviceHistory\"\n                    @isFinished=\"isFinished\"\n                    :selectedAgentId=\"selectedAgentId\"\n                    >\n                    </service-history>\n                </el-tab-pane>\n            </el-tabs>\n        </div>\n    </div>\n</template>\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/colors\"; \n    .icon{\n        color: #337ab7;\n    }\n    .btn-group{\n        padding: 10px;\n        background: #fff;\n        margin: 10px 0;\n        border-radius: 5px;\n    }\n    .service-box{\n        display: inline-block;\n        .label{\n            font-size: 15px;\n        }\n        .cvalue{\n            display: inline-block;\n            min-width: 35px;\n            text-align: center;\n            border-bottom: 1px solid #ffffff;\n            margin-left: 5px;\n            font-style:italic;\n            padding: 5px;\n        }\n    }\n    .pkgStatusContent{\n        position: relative;\n        .appStatusCount{\n            position: absolute;\n            top: 30px;\n            right: 6px;\n            span{\n                font-weight: 500;\n                font-size: 11px;\n                &:nth-child(1){\n                    color: $primary-color;\n                }\n                &:nth-child(2){\n                    border-left: 2px solid #ddd;\n                    padding-left: 3px; \n                    color: $info-color;\n                }\n                &:nth-child(3){\n                    color: $warn-color;\n                }\n                &:nth-child(4){\n                    color: $success-color;\n                }\n                &:nth-child(5){\n                    color: $darkgray-color;\n                }\n            }\n            \n        }\n    }\n\n    \n    .search{\n        position: absolute;\n        top: 20px;\n        right: 20px;\n        width: 230px;\n        z-index: 1001;\n        .search-icon{\n            position: absolute;\n            top: 6px;\n            right: 1px;\n            color: #ddd;\n            z-index: 10001;\n        }\n    }\n</style>\n<script>\n    import selectDevice from '../../common/select-device'\n    import selectGroup from \"../../common/select-group\"\n    import {groupType, singleServiceType} from \"../../assets/js/constant\"\n    import {dockerAction} from '@/assets/js/lwm2mMap'\n    import handleResponse from '@/components/restfulapi/handleResponse'\n    import {getDeviceStatus, setDeviceStatus, execDeviceStatus, batchExecDeviceStatus } from '@/components/restfulapi/deviceStatusApi';\n    import serviceHistory from \"./servicecontroldetails/history\"\n    import{getAppStatusOverviewApi} from \"@/components/restfulapi/appStatusApi\"\n    import {setLocal, getLocal, getSession, checkSession, setSession} from \"../../assets/js/storage\"\n    export default{\n        name: 'comtainercontrol',\n        data(){\n            let validateTaskname = (rule,value,callback)=>{\n                let reg=new RegExp(/^(?![._-\\s])[\\u4E00-\\u9FA5A-Za-z0-9_\\-\\.\\s]{1,12}$/);\n                if(!reg.test(value)){\n                    return callback(new Error (this.$t('global.verifyShortError')))\n                }else{callback()};\n            };\n            return {\n                selectedAgentId: '',\n                serviceTableData: [],\n                //offline device is disabled\n                isDisabledOffDev: true,\n                //selectedAgent is offline\n                isOffline: false,\n                listLoading: false,\n                productname: \"\",\n                multipleSelection: [],\n                version: \"\",\n                singleServiceType,\n                \n                activeName: \"service\",\n                keywords: '',\n                cid: \"\",\n                isFixed: false,\n                offsetTop: 10000,\n                content: \"\"\n            }\n        },\n        components:{\n            selectDevice,\n            selectGroup,\n            serviceHistory,\n            editor: require('vue2-ace-editor'),\n        },\n        methods:{\n            getSensorStatus(){\n                let data = {};\n                if(!this.selectedAgentId) {\n                    console.error(\"agentId is empty\");\n                    return;\n                }\n                if(this.productname){\n                    data.productname = this.productname;\n                    data.version = this.version;\n                }\n                this.listLoading = true;\n                getDeviceStatus(this.selectedAgentId, dockerAction[\"getService\"], data).then((obj) => {\n                    this.listLoading = false;\n                    handleResponse(obj, (res) => {\n                        if(res.status == \"CONTENT\"){\n                            this.serviceTableData = JSON.parse(res.content.value);\n                        }\n                    })   \n                }) \n            },\n\n            editorInit: function () {\n                require('brace/ext/language_tools') //language extension prerequsite...\n                require('brace/mode/html')                \n                require('brace/mode/javascript')    //language\n                require('brace/mode/less')\n                require('brace/theme/twilight')\n                require('brace/snippets/javascript') //snippet\n            },\n            getDeviceOption(selectedAgentId){ \n                this.initData();\n                this.selectedAgentId = selectedAgentId;\n                this.getSensorStatus();\n            },\n\n            initData(){\n                this.serviceTableData = [];\n            },\n\n            initContainerInfo(){\n                this.cid = \"\";\n            },\n\n            isDisabled(value){\n                this.isDisabledOffDev = value;\n            },\n            isOfflineDev(value){\n                this.isOffline = value\n            },\n            handleClick(tab){\n                if(tab.name === \"serviceStatusHistory\"){\n                    if(this.$route.query.name){\n                       this.$refs.serviceHistory.intervalGetServiceStatusHistory();\n                    }\n                    this.isDisabledOffDev = false;\n                }else{\n                    this.isDisabledOffDev = true\n                }\n            },\n            isFinished(){\n                this.getSensorStatus();\n            },\n\n            actionComposeSensor(cid, appdata){\n                if(dockerAction[cid] === undefined){\n                    this.$swal(\"\", this.$t('global.functionNotSupport'), 'info', {button: this.$t('global.confirm')});\n                    return;\n                }\n\n                if(this.selectedAgentId == ''){\n                    this.$swal(\"\",this.$t('global.selectDevice'),\"info\", {button: this.$t('global.confirm')})\n                    return;\n                }\n                _g.swalWarnDo(this.$t('global.areYouSure'), this.$t(\"dockerAction.\"+cid), this.$t('global.confirm'), this.$t('global.cancel')).then((willfunc) => {\n                    if (willfunc) {\n                        _g.openGlobalLoading();\n                        execDeviceStatus(this.selectedAgentId, dockerAction[cid], appdata).then((data) => {\n                            handleResponse(data, (res) => {\n                                if(res.status == \"CHANGED\"){\n                                    this.activeName = \"serviceStatusHistory\";\n                                    this.$refs.serviceHistory.intervalGetServiceStatusHistory();\n                                }else{\n                                    _g.handleError(res);\n                                }\n                            })\n                        })\n                    }\n                })\n            },\n            selectItem(val) {\n                this.multipleSelection = val;\n            },\n            composeAction(cid){\n                let serviceInfo = {};\n                let data = [];\n                let taskname = this.singleServiceType+ (new Date()).getTime();\n                this.multipleSelection.forEach(element => {\n                    let obj = {};\n                    obj.name = element.name;\n                    obj.containerId = element.id\n                    data.push(obj);\n                });\n                serviceInfo.taskname = taskname;\n                serviceInfo.content = JSON.stringify(data)\n                this.actionComposeSensor(cid, serviceInfo)\n            },\n\n            back() {\n                this.$router.go(-1);\n            },\n\n            filterStatus(value, row){\n                return row.state === value ;\n            },\n\n            \n\n            // handleScroll(){\n            //     let contentEle = document.getElementById(\"homeContant\");\n            //     var scrollTop = contentEle.pageYOffset || contentEle.scrollTop;\n            //     if (scrollTop > this.offsetTop) {\n            //         this.isFixed = true\n            //     } else {\n            //         this.isFixed = false\n            //     }\n            // },\n\n            goRouter(row){\n                this.$router.push({\n                path: \"/main/control/servicedetail\",\n                query: {\n                        name: row.name,\n                        serviceId: row.id,\n                        endpoint: this.selectedAgentId\n                    }\n                })\n            },\n\n            showYmlContent(){\n                this.dialogYamlVisible = true;\n                let data = {};\n                data.productname = this.productname;\n                data.version = this.version;\n                getDeviceStatus(this.selectedAgentId, dockerAction[\"getComposeContent\"], data).then((obj) => {\n                    handleResponse(obj, (res) => {\n                        if(res.status == \"CONTENT\"){\n                            this.content = res.content.value;\n                        }   \n                    })   \n                })\n            },\n\n            updateYmlContent(cid){\n                let serviceInfo = {};\n                let data = [];\n                let taskname = this.singleServiceType+ (new Date()).getTime();\n                let servicedata = {\n                    taskname,\n                    projectname: this.productname,\n                    version: this.version,\n                    downloadpath: this.content\n                }\n                this.actionComposeSensor(cid, servicedata)\n            },  \n            \n        },\n\n        created() {\n            if(this.$route.query.name){\n                this.productname = this.$route.query.name;\n                this.version = this.$route.query.version;\n                this.selectedAgentId = this.$route.query.endpoint;\n                this.getSensorStatus();\n                this.showYmlContent();  \n                this.limited = this.$route.query.limited     \n            }\n        },\n        computed:{\n            serviceTableList(){\n                return this.serviceTableData.filter(\n                    data => !this.keywords || data.name.toLowerCase().includes(this.keywords.toLowerCase())\n                )\n            },\n            isShowSearchInput(){\n                if(this.activeName === \"service\"){\n                    return true;\n                }else{\n                    return false;\n                }\n            },\n\n            removebtndisabled(){\n                if(this.multipleSelection.length>0){\n                    return false;\n                }else{\n                    return true;\n                }\n            },\n\n            btnGroupIsShow(){\n                if(this.activeName == \"service\"){\n                    return true;\n                }else{\n                    return false;\n                }\n            }\n        },\n        // mounted() {\n        //     let contentEle = document.getElementById(\"homeContant\");\n        //     this.offsetTop = document.getElementById(\"actionID\").offsetTop;\n        //     contentEle.addEventListener('scroll', this.handleScroll)\n        // },\n\n        // beforeDestroy() {\n        //     let contentEle = document.getElementById(\"homeContant\");\n        //     contentEle.removeEventListener('scroll', this.handleScroll)\n        // },\n\n    }\n</script>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/dockercontrol/servicecontrol.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-box\"},[_c('div',{staticClass:\"title-box\"},[_c('p',{staticClass:\"header-line\"},[_c('i',{staticClass:\"fa fa-arrow-left m-r-10 pointer\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){_vm.back()}}}),_vm._v(\"\\n            \"+_vm._s(_vm.$t('dockerControl.serviceList'))+\"\\n        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"select-box\"},[_c('div',{staticClass:\"service-box m-l-10\"},[_c('span',{staticClass:\"label\"},[_vm._v(_vm._s(_vm.$t('dockerControl.projectName'))+\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"cvalue\"},[_vm._v(_vm._s(_vm.productname))])]),_vm._v(\" \"),_c('div',{staticClass:\"service-box m-l-10\"},[_c('span',{staticClass:\"label\"},[_vm._v(_vm._s(_vm.$t('dockerControl.version'))+\":\")]),_vm._v(\" \"),_c('span',{staticClass:\"cvalue\"},[_vm._v(_vm._s(_vm.version))])])]),_vm._v(\" \"),_c('div',{staticClass:\"table-box pkgStatusContent\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowSearchInput),expression:\"isShowSearchInput\"}],staticClass:\"search\"},[_c('el-input',{staticClass:\"w-250 m-l-10\",attrs:{\"size\":\"small\",\"placeholder\":_vm.$t('dockerControl.serviceKeywordHolder')},model:{value:(_vm.keywords),callback:function ($$v) {_vm.keywords=$$v},expression:\"keywords\"}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-search search-icon\",attrs:{\"aria-hidden\":\"true\"}})],1),_vm._v(\" \"),_c('el-tabs',{on:{\"tab-click\":_vm.handleClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"name\":\"service\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-sellsy m-r-5\",attrs:{\"aria-hidden\":\"listLoading\"}}),_vm._v(\"\\n                    \"+_vm._s(_vm.$t('dockerControl.service'))+\"\\n                \")]),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.serviceTableList,\"tooltip-effect\":\"dark\"},on:{\"selection-change\":_vm.selectItem}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":_vm.$t('dockerControl.name'),\"min-width\":\"90\",\"sortable\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"url pointer\",on:{\"click\":function($event){_vm.goRouter(scope.row)}}},[_vm._v(\"\\n                                \"+_vm._s(scope.row.name)+\"\\n                            \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"image\",\"label\":_vm.$t('dockerControl.image'),\"min-width\":\"180\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"pointer url\",on:{\"click\":function($event){_vm.goRouter(scope.row)}}},[_vm._v(\"\\n                                \"+_vm._s(scope.row.image)+\"\\n                                \"),_c('i',{staticClass:\"fa fa-pencil-square-o m-l-5\",attrs:{\"aria-hidden\":\"true\"}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('dockerControl.schedulingMode'),\"min-width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"pointer url\",on:{\"click\":function($event){_vm.goRouter(scope.row)}}},[_vm._v(\"\\n                                \"+_vm._s(scope.row.schedulingmode)+\" \"+_vm._s(scope.row.taskstatus)+\"\\n                                \"),_c('i',{staticClass:\"fa fa-arrows-v m-l-5\",attrs:{\"aria-hidden\":\"true\"}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"lastupdate\",\"label\":_vm.$t('dockerControl.lastupdate'),\"min-width\":\"120\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('dockerControl.publishedPort'),\"min-width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                            \"+_vm._s(_vm._f(\"none\")(scope.row.ports))+\"\\n                        \")]}}])})],1)],1),_vm._v(\" \"),(!_vm.limited|| _vm.limited == 'false')?_c('el-tab-pane',{attrs:{\"name\":\"edit\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-pencil-square-o m-r-5\",attrs:{\"aria-hidden\":\"listLoading\"}}),_vm._v(\"\\n                    \"+_vm._s(_vm.$t('dockerControl.editComposeFile'))+\"\\n                \")]),_vm._v(\" \"),_c('div',{staticClass:\"text-center\"},[_c('editor',{attrs:{\"lang\":\"html\",\"theme\":\"chrome\",\"height\":\"550\",\"options\":{\n                    enableBasicAutocompletion: true,\n                    enableSnippets: true,\n                    enableLiveAutocompletion: true,\n                    tabSize:2,\n                    fontSize:14,\n                    showPrintMargin:false,   //去除编辑器里的竖线\n                    }},on:{\"init\":_vm.editorInit},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"m-t-10\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){_vm.updateYmlContent('updateSwarmContent')}}},[_vm._v(_vm._s(_vm.$t('global.update')))])],1)]):_vm._e(),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"name\":\"serviceStatusHistory\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-history m-r-5\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n                    \"+_vm._s(_vm.$t('dockerControl.history'))+\"\\n                \")]),_vm._v(\" \"),_c('service-history',{ref:\"serviceHistory\",attrs:{\"statusType\":_vm.singleServiceType,\"selectedAgentId\":_vm.selectedAgentId},on:{\"isFinished\":_vm.isFinished}})],1)],1)],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-0cb3e6e8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/dockercontrol/servicecontrol.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0cb3e6e8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./servicecontrol.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./servicecontrol.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./servicecontrol.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0cb3e6e8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./servicecontrol.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0cb3e6e8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/dockercontrol/servicecontrol.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}