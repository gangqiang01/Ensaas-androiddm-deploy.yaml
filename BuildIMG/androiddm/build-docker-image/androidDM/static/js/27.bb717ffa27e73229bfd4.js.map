{"version":3,"sources":["webpack:///src/components/vnc/list.vue","webpack:///./src/components/vnc/list.vue?5f9c","webpack:///./src/components/vnc/list.vue"],"names":["list","name","data","selectedAgentId","selectedDeviceId","rfb","vncMode","repeaterID","desktopName","connectStatus","isShowClosed","level","VNCStatus","groupType","constant","android","components","selectDevice","select_device","methods","disconnectVNC","Object","deviceStatusApi","this","lwm2mMap","console","log","_disconnect","setRepeaterId","Math","floor","random","separateUrl","url","substring","indexOf","connectVncServer","_this","password","status","window","setTimeout","serverConfigApi","then","host","repeaterid","stringify_default","handleResponse","res","startVNC","_g","handleError","$swal","$t","button","updateDesktopName","e","detail","text","type","connected","webutil","disconnected","clean","port","path","token","document","getElementById","shared","credentials","viewOnly","addEventListener","scaleViewport","resizeSession","getDeviceOption","msg","created","beforeDestroy","vnc_list","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","on","select-device","attrs","id","directives","rawName","value","expression","click","class","$event","src","__webpack_require__","alt","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/27.bb717ffa27e73229bfd4.js","sourcesContent":["<template>\n   <div class=\"content\">\n        <div class=\"title-box\">\n            <p class=\"header-line\"><i class=\"fa fa-desktop m-r-10\" ></i>{{$t('vnc.remoteDesktop')}}</p>\n        </div>\n\n         <div class=\"select-box\">\n            <select-device\n             @select-device=\"getDeviceOption\"></select-device>\n        </div>\n        <div class=\"table\" >\n            <div id=\"noVNC_content\">\n                <i class=\"fa fa-times fa-x pointer\" @click=\"disconnectVNC\" id=\"VNC_closed\" v-show=\"isShowClosed\" ></i>\n                <div id=\"noVNC_status_bar\" :class=\"['noVNC_status_' + level]\">\n                    <div id=\"noVNC_left_dummy_elem\"></div>\n                    <div id=\"noVNC_status\">\n                        {{VNCStatus}}\n                    </div>\n\n                    <div id=\"VNC_enter\" >\n                        <div v-show=\"connectStatus === 'disconnect'\">\n                            <h2 class=\"VNC_title\">{{$t('vnc.remoteToYourDevice')}}</h2>\n                            <el-button type=\"primary\"  @click=\"connectVncServer()\">\n                                <i class=\"fa fa-link\"></i> {{$t('vnc.connect')}}\n                            </el-button>\n                        </div>\n                        <div v-show=\"connectStatus === 'connecting'\">\n                            <img src=\"@/assets/imgs/connect_vnc.gif\" alt=\"no img\">\n                        </div>\n                        <div v-show=\"connectStatus === 'connected'\"></div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n   </div>\n</template>\n<script>\n    // import {getVNCPropertysApi} from '../restfulapi/vncapi'\n    import handleResponse from '../restfulapi/handleResponse'\n    import selectDevice from '../../common/select-device'\n    import * as WebUtil from '../../../static/noVNC/app/webutil.js';\n    import RFB from '../../../static/noVNC/core/rfb.js';\n    import {getVncServerHostApi,getRepeaterServerApi,getRepeaterViewerApi} from \"../restfulapi/serverConfigApi\"\n    import {setDeviceStatus, execDeviceStatus} from '../restfulapi/deviceStatusApi'\n    import {vncServer} from \"../../assets/js/lwm2mMap\"\n    import {repeaterIp, groupType} from \"../../assets/js/constant\";\n    export default{\n        name: 'vncList',\n        data(){\n            return {\n                selectedAgentId: '',\n                selectedDeviceId: '',\n                rfb: null,\n                vncMode: 3,\n                repeaterID: 0,\n                desktopName:'',\n                connectStatus: \"disconnect\",\n                isShowClosed: false,\n                level: '',\n                VNCStatus: '',\n                groupType: groupType.android,\n            }\n        },\n        components:{\n            selectDevice\n        },\n        methods: {\n            disconnectVNC(){\n                setDeviceStatus(this.selectedAgentId, vncServer[\"stopVncServer\"], true)\n                if(this.rfb != null){\n                    console.log(\"close vnc ...\")\n                    this.rfb._disconnect()\n                };\n            },\n\n            setRepeaterId(){\n                this.repeaterID = Math.floor(Math.random()*9000)+1000;\n            },\n\n            separateUrl(url){\n                let ip = url.substring(url.indexOf(\"\"))\n            },\n\n            connectVncServer(){\n                if(!this.selectedAgentId){\n                    this.$swal(\"\",this.$t('global.selectDevice'), \"info\", {button: this.$t('global.confirm')})\n                    return;\n                }\n\n                //password must be string \n                let password = Math.floor(Math.random()*9000)+1000+\"\";\n                this.status(\"connecting\", \"normal\", \"connecting\");\n                window.setTimeout(() => {\n                    getVncServerHostApi().then((host) => {\n                        let data =  {\n                            repeaterid: this.repeaterID, \n                            url: repeaterIp, \n                            password: password\n                            }\n                        setDeviceStatus(this.selectedAgentId, vncServer[\"startVncServer\"], JSON.stringify(data)).then((data) => {\n                            handleResponse(data, (res) => {\n                                if(res.status = \"CHANGED\"){\n                                    let path = \"websockify/?token=00190F2A51F5\";\n                                    window.setTimeout(() => {\n                                        this.startVNC(host, \"\", password, path);\n                                    }, 3000);\n                                }else{\n                                    _g.handleError(res);\n                                }\n                            })\n                        })  \n                    }); \n                }, 2000)  \n            },\n\n            updateDesktopName(e) {\n                this.desktopName = e.detail.name;\n            },\n\n\n            status(text, level, type) {\n                var vncContentMsg = ` <h2 class=\"VNC_title\">VNC To Your Device</h2>\n                    <el-button type=\"primary\"  @click=\"startVNC\">\n                        <i class=\"fa fa-link\"></i> Connect\n                    </el-button>`;\n                switch (level) {\n                    case 'normal':\n                        break;\n                    case 'warn':\n                        break;\n                    case 'error':\n                        type = \"disconnect\";\n                        break;\n                    \n                    default:\n                        this.level = \"warn\";\n                }\n                if(type == \"connecting\"){\n                    this.isShowClosed = false;\n                    this.connectStatus = \"connecting\";\n                }else if(type == \"disconnect\"){\n                    this.isShowClosed = false;\n                    this.connectStatus = \"disconnect\"\n                }else{\n                    this.isShowClosed = \"true\";\n                    this.connectStatus=\"connected\"\n                }\n                this.level = level;\n                this.VNCStatus = text;\n            },\n\n            connected(e) {\n                if (WebUtil.getConfigVar('encrypt',true)) {\n                    this.status(\"Connected (encrypted) to \" + this.desktopName, \"normal\", \"connected\");\n                } else {\n                    this.status(\"Connected (unencrypted) to \" + this.desktopName, \"normal\", \"connected\");\n                }\n            },\n\n            disconnected(e) {\n                if (e.detail.clean) {\n                    this.status(\"disconnect\", \"normal\", \"disconnect\");\n                } else {\n                    this.status(\"Something went wrong, Try connecting again later\", \"error\", \"error\");\n                }  \n            },\n\n\n\n            // By default, use the host and port of server that served this fil\n\n                \n            startVNC(host, port, password, path){\n                var token = WebUtil.getConfigVar('token', null);\n                if (token) {\n                    // if token is already present in the path we should use it\n                    path = WebUtil.injectParamIfMissing(path, \"token\", token);\n                \n                    WebUtil.createCookie('token', token, 1)\n                }\n\n                this.status(\"connecting\", \"normal\", \"connecting\");\n                if ((!host)) {\n                    this.status('Must be a specify connect URL', 'error', \"error\");\n                    return;\n                }\n\n                var url  = 'wss';\n\n                url += '://' + host;\n                if(port) {\n                    url += ':' + port;\n                }\n                url += '/' + path;\n\n                this.rfb = new RFB(document.getElementById('noVNC_content'), url,\n                    { repeaterID: this.repeaterID,\n                        shared: true,\n                        credentials: { password: password } });\n                this.rfb.viewOnly = WebUtil.getConfigVar('view_only', false);\n                this.rfb.addEventListener(\"connect\",  this.connected);\n                this.rfb.addEventListener(\"disconnect\", this.disconnected);\n                this.rfb.addEventListener(\"desktopname\", this.updateDesktopName);\n                this.rfb.scaleViewport = true;\n                this.rfb.resizeSession = WebUtil.getConfigVar('resize', false);\n            },\n\n            getDeviceOption(msg){\n                if(this.selectedAgentId){\n                    this.disconnectVNC();\n                }\n                this.setRepeaterId();\n                this.selectedAgentId = msg;\n            }\n\n        },\n        \n        created(){\n            this.setRepeaterId();\n        },\n\n        beforeDestroy() {\n            if(this.selectedAgentId != \"\"){\n                this.disconnectVNC();\n                this.selectedAgentId = \"\";\n            }\n        },\n        \n    }\n</script>\n<style lang='scss' scoped>\n@import \"../../assets/css/colors\"; \n#noVNC_content{\n    border:1px solid #ddd;\n    height:45rem;\n    position:relative;\n    background-color:#eaeaea;\n    // margin: 10px;\n}\n\n#VNC_closed{\n    position: absolute;\n    color:#d3104b;\n    padding:5px;\n    right:1px;\n    top:-4px;\n    cursor: pointer;\n}\n\n#noVNC_status_bar {\n    width: 100%;\n    text-align: center;\n}\n\n#noVNC_status {\n    color: #fff;\n    font: bold 12px Helvetica;\n    margin: auto;\n}\n\n.noVNC_status_normal {\n    background: linear-gradient(#b2bdcd 0%,#899cb3 49%,#7e93af 51%,#6e84a3 100%);\n}\n\n.noVNC_status_error {\n    background: linear-gradient(#c83737 0%,#899cb3 49%,#7e93af 51%,#6e84a3 100%);\n}\n\n.noVNC_status_warn {\n    background: linear-gradient(#b4b41e 0%,#899cb3 49%,#7e93af 51%,#6e84a3 100%);\n}\n\n.noNVC_shown {\n    display: inline;\n}\n.noVNC_hidden {\n    display: none;\n}\n\n#noVNC_left_dummy_elem {\n     flex: 1;\n}\n#Terminal_enter .Terminal_title, #VNC_enter .VNC_title{\n    color:#337ab7;\n    margin-bottom:20px;\n}\n\n#VNC_enter, #Terminal_enter{\n    position: absolute;\n    left:50%;\n    top:50%;\n    transform:translate(-50%, -50%);\n    text-align: center;\n}\n\n.repeaterContainer{\n    max-width: 180px;\n    margin: auto;\n}\n.vnote{\n    margin-bottom: 5px;\n    color: $darkgray-color;\n    font-size:14px;\n    i{\n        color: $danger-color;\n        margin-right: 5px;\n        \n    }\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/vnc/list.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"title-box\"},[_c('p',{staticClass:\"header-line\"},[_c('i',{staticClass:\"fa fa-desktop m-r-10\"}),_vm._v(_vm._s(_vm.$t('vnc.remoteDesktop')))])]),_vm._v(\" \"),_c('div',{staticClass:\"select-box\"},[_c('select-device',{on:{\"select-device\":_vm.getDeviceOption}})],1),_vm._v(\" \"),_c('div',{staticClass:\"table\"},[_c('div',{attrs:{\"id\":\"noVNC_content\"}},[_c('i',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowClosed),expression:\"isShowClosed\"}],staticClass:\"fa fa-times fa-x pointer\",attrs:{\"id\":\"VNC_closed\"},on:{\"click\":_vm.disconnectVNC}}),_vm._v(\" \"),_c('div',{class:['noVNC_status_' + _vm.level],attrs:{\"id\":\"noVNC_status_bar\"}},[_c('div',{attrs:{\"id\":\"noVNC_left_dummy_elem\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"noVNC_status\"}},[_vm._v(\"\\n                     \"+_vm._s(_vm.VNCStatus)+\"\\n                 \")]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"VNC_enter\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.connectStatus === 'disconnect'),expression:\"connectStatus === 'disconnect'\"}]},[_c('h2',{staticClass:\"VNC_title\"},[_vm._v(_vm._s(_vm.$t('vnc.remoteToYourDevice')))]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.connectVncServer()}}},[_c('i',{staticClass:\"fa fa-link\"}),_vm._v(\" \"+_vm._s(_vm.$t('vnc.connect'))+\"\\n                         \")])],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.connectStatus === 'connecting'),expression:\"connectStatus === 'connecting'\"}]},[_c('img',{attrs:{\"src\":require(\"@/assets/imgs/connect_vnc.gif\"),\"alt\":\"no img\"}})]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.connectStatus === 'connected'),expression:\"connectStatus === 'connected'\"}]})])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-83e43742\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/vnc/list.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-83e43742\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./list.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./list.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./list.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-83e43742\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./list.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-83e43742\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/vnc/list.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}