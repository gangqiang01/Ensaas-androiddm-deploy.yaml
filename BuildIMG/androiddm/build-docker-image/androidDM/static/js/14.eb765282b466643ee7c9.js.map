{"version":3,"sources":["webpack:///src/components/deploy/appcontroldetails/history.vue","webpack:///./src/components/deploy/appcontroldetails/history.vue?01bf","webpack:///./src/components/deploy/appcontroldetails/history.vue","webpack:///src/components/deploy/appcontroldetails/single.vue","webpack:///./src/components/deploy/appcontroldetails/single.vue?4b22","webpack:///./src/components/deploy/appcontroldetails/single.vue","webpack:///src/components/deploy/appcontroldetails/batch.vue","webpack:///./src/components/deploy/appcontroldetails/batch.vue?901b","webpack:///./src/components/deploy/appcontroldetails/batch.vue","webpack:///src/components/deploy/appcontrol.vue","webpack:///./src/components/deploy/appcontrol.vue?a24b","webpack:///./src/components/deploy/appcontrol.vue"],"names":["appcontroldetails_history","name","data","appStatusHistoryTableList","isshow","limit","dataCount","currentPage","multipleSelection","isShowBtnGroup","clearLoading","batchDeleteAppStatusHistory","appStatusApi","intervalTime","isInterval","listLoading","singleInstallType","constant","batchInstallType","statusArray","components","btnGroup","props","statusType","default","type","String","selectedAgentId","groupname","methods","selectItem","val","this","checkSelectable","row","status","handleCurrentChange","intervalGetAppStatusHistory","deleteHistory","aisid","_this","_g","swalInfoDo","$t","then","result","Object","handleResponse","res","$swal","button","handleError","checkAppStatusData","getAppStatusHistoryByGroupname","_this2","console","error","length","assignAppStatusData","getAppStatusHistoryByDevid","_this3","prototype","toString","call","count","isFinish","$emit","forEach","window","clearInterval","timer","_this4","setInterval","filterStatus","value","isArray","resetAppSensor","sensorId","appdata","_this5","deviceStatusApi","activeName","reinstall","appItem","_this6","taskname","filename","pkgname","versioncode","version","versionname","downloadpath","address","target","deviceId","isSuccess","clearAll","_this7","initData","created","beforeDestroy","watch","deploy_appcontroldetails_history","render","_vm","_h","$createElement","_c","_self","directives","rawName","expression","ref","staticStyle","width","attrs","tooltip-effect","default-sort","prop","order","on","selection-change","filter-change","min-width","selectable","_v","label","_e","scopedSlots","_u","key","fn","scope","_s","_f","ts","column-key","filters","text","filter-placement","height","src","__webpack_require__","alt","staticClass","errorcode","align","size","disabled","click","$event","selectedData","isDelete","isMove","tid","delApi","layout","page-size","current-page","total","background","current-change","staticRenderFns","components_deploy_appcontroldetails_history","normalizeComponent","ssrContext","single","startApp","stopApp","enableApp","disableApp","appTableData","appOptions","disableAppArray","appGroups","defaultImg","appType","whitelist","keywords","isSingleMode","Boolean","isOffline","appHistory","cardTemp","getSensorStatus","AppManagementInfoArray","deviceAppArray","lwm2mMap","obj","content","allAppData","JSON","parse","uninstallAppObj","appname","appName","package","packageName","versionCode","versionName","raid","isKioskApp","inwhitelist","inWhiteList","push","getRepoApps","removeObjInArray","originData","rem_apk_val","obj_val","index","splice","InstallAppManagementInfo","UpgradeAppManagementInfo","getRepoAppApi","darkname","repo","deviceapp_val","pop","Number","reverse","filterType","actionAppSensor","cid","undefined","swalWarnDo","willfunc","openGlobalLoading","$refs","setAppSensor","setSensorVal","isFinished","appAction","selectedAppData","setsensorval","Date","getTime","handleCommand","command","id","appInfo","getSrc","serverConfigApi","handleClick","tab","getServerStatus","disableOperation","computed","isShowSearchInput","appcontroldetails_single","placeholder","model","callback","$$v","aria-hidden","tab-click","slot","filter","toLowerCase","includes","onerror","sortable","filter-method","indexOf","deploy_appcontroldetails_single","single_normalizeComponent","batch","dialogTasknameVisible","appStatusForm","rules","required","validator","rule","RegExp","test","Error","trigger","isShowOverview","local_taskname","success","installing","failed","selectedAgentsData","Array","batchSetAppSensor","storage","batchInstallApp","validate","valid","selectBatchInstallApp","initApkInfo","getBatchAppStatusCount","fail","appcontroldetails_batch","getStatusCount","visible","close-on-click-modal","update:visible","close","label-width","autocomplete","$set","trim","deploy_appcontroldetails_batch","batch_normalizeComponent","appcontrol","isDisabledOffDev","groupType","android","groupTypeArray","selectDevice","select_device","selectGroup","select_group","modeSwitch","mode_switch","singleControl","batchControl","getDeviceOption","getGroupOption","changeMode","getGroupName","isDisabled","isOfflineDev","deploy_appcontrol","mode-status","select-getDeviceOptions","select-getGroupName","select-device","appcontrol_Component","appcontrol_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/14.eb765282b466643ee7c9.js","sourcesContent":["<template>\n    <div>\n        <el-table\n            :data=\"appStatusHistoryTableList\"\n            tooltip-effect=\"dark\"\n            style=\"width: 100%\"\n            @selection-change=\"selectItem\"\n            @filter-change=\"filterStatus\"\n            :default-sort = \"{prop: 'ts', order: 'descending'}\"\n            ref=\"appStatusHistoryTable\"\n            v-loading=\"listLoading\" \n\n            >\n            <el-table-column\n            type=\"selection\"\n            min-width=\"50\"\n            :selectable=\"checkSelectable\">\n            </el-table-column>\n\n            <el-table-column\n            prop=\"devname\"\n            :label=\"$t('appControl.deviceName')\"\n            min-width=\"120\"\n            >\n            </el-table-column>\n\n            <el-table-column\n            prop=\"taskname\"\n            :label=\"$t('appControl.taskName')\"\n            min-width=\"120\"\n            v-if=\"statusType == batchInstallType\"\n            >\n            </el-table-column>\n\n            <el-table-column\n            prop=\"filename\"\n            :label=\"$t('appControl.apkName')\"\n            min-width=\"140\"\n            >\n            </el-table-column>\n\n            <el-table-column\n            prop=\"versionname\"\n            :label=\"$t('appControl.versionName')\"\n            min-width=\"105\"\n            >\n            </el-table-column>\n            \n            <el-table-column\n            :label=\"$t('appControl.beginTime')\"\n            min-width=\"130\"\n            prop=\"ts\"\n                >\n                <template slot-scope=\"scope\">\n                    {{scope.row.ts|time}}\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            prop=\"target\"\n            :label=\"$t('appControl.function')\"\n            min-width=\"120\"\n            >\n                <template slot-scope=\"scope\">\n                    {{scope.row.target|appStatusFunction}}\n                </template>\n            </el-table-column>\n            <el-table-column\n            column-key=\"status\"\n            prop=\"status\"\n            :label=\"$t('appControl.installStatus')\"\n            min-width=\"140\"\n            :filters=\"[{ text: $t('global.success'), value: 2 }, { text: $t('global.failed'), value: 1 }, {text: $t('global.running'), value: 0}]\"\n            filter-placement=\"bottom-end\"\n            >\n                <template slot-scope=\"scope\">\n                    <img src=\"@/assets/imgs/loading1.gif\" alt=\"\" style=\"width:50px;height:10px;\"v-if=\"scope.row.status==0\">\n                    <span v-if=\"scope.row.status==2\" class=\"badge bg-green\">{{$t('global.success')}}</span>\n                    <span v-if=\"scope.row.status==1\" class=\"badge bg-DimGray\">{{$t('global.failed')}}</span>\n                    <!-- {{scope.row.upstatus|AppStatus}} -->\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            :label=\"$t('appControl.errorStatus')\"\n            min-width=\"100\"\n            >\n                <template slot-scope=\"scope\">\n                    {{(\"\"+scope.row.errorcode)|appErrorStatus}}\n                </template>\n            </el-table-column>\n\n            <el-table-column\n            :label=\"$t('appControl.action')\"\n            min-width=\"175\"\n            align=\"center\">\n                <template slot-scope=\"scope\">\n                    <div>\n                        <el-button-group>\n                            <el-button \n                                size=\"mini\" \n                                type=\"danger\"\n                                @click=\"deleteHistory(scope.row.aisid)\"\n                                :disabled=\"scope.row.status==0\"\n                                >\n                                    {{$t('global.delete')}}\n                            </el-button>\n                            <el-button \n                                size=\"mini\" \n                                type=\"primary\"\n                                @click=\"reinstall(scope.row)\"\n                                :disabled=\"scope.row.status!=1\"\n                                >\n                                    {{$t('appControl.reinstall')}}\n                            </el-button>\n                        </el-button-group>\n                    </div>\n                </template>\n            </el-table-column>\n\n        </el-table>\n\n        <btn-group \n        :selectedData=\"multipleSelection\" \n        :isDelete=\"true\" \n        :isMove=\"false\" \n        tid=\"aisid\" \n        :delApi=\"batchDeleteAppStatusHistory\" \n        @result=\"isSuccess\" \n        v-show=\"isShowBtnGroup\"\n        class=\"fl m-t-10 cf\">\n        </btn-group>\n\n        <el-button \n        v-loading=\"clearLoading\" \n        size=\"small\" \n        @click=\"clearAll()\" \n        type=\"primary\" \n        class=\"fl m-t-10 cf m-l-10\"\n            v-show=\"isShowBtnGroup\">\n        {{$t('appControl.clearAll')}}\n        </el-button>\n\n        <div class=\"m-t-10 cf fr\">\n            <el-pagination\n            @current-change=\"handleCurrentChange\"\n            layout=\"prev, pager, next\"\n            :page-size=\"limit\"\n            :current-page=\"currentPage\"\n            :total=\"dataCount\"\n            v-show=\"isshow\"\n            background\n            >\n            </el-pagination>\n            \n        </div> \n        \n       \n    </div>\n</template>\n<script>\n    import {appControl} from '@/assets/js/lwm2mMap'\n    import {reExecDeviceStatus} from '@/components/restfulapi/deviceStatusApi';\n    import{\n    getAppStatusByTypeApi, \n    batchDeleteAppStatusHistoryApi, \n    deleteAppStatusHistoryApi, \n    deleteAppStatusHistoryAllByTypeApi,\n    deleteAppStatusHistoryAllApi,\n    getAppStatusOverviewApi,\n    getAppStatusByTypeAndDevIdApi, \n    getAppStatusByTypeAndGroupApi,\n    getAppStatusByTypeAndPageInGroupApi,\n    getAppStatusByTypeAndPageAndStatusInGroupApi,\n    getAppStatusByTypeAndPageInDevIdApi,\n    getAppStatusByTypeAndPageAndStatusInDevIdApi,\n    deleteAppStatusHistoryAllByDevIdAndTypeApi,\n    deleteAppStatusHistoryAllByGroupAndTypeApi\n    } from \"@/components/restfulapi/appStatusApi\"\n    import {setLocal, getLocal, getSession, checkSession, setSession} from \"../../../assets/js/storage\"\n\n    import handleResponse from '@/components/restfulapi/handleResponse'\n    import btnGroup from \"../../../common/btn-group\";\n    import {singleInstallType, batchInstallType} from \"../../../assets/js/constant\"\n\nexport default {\n    name: 'appcontrolHistory',\n    data() {\n        return {\n            appStatusHistoryTableList: [],\n            isshow: false,\n            limit: 10,\n            dataCount: 0,\n            currentPage: 1,\n            multipleSelection: [],\n            isShowBtnGroup: false,\n            clearLoading: false,\n            batchDeleteAppStatusHistory:  batchDeleteAppStatusHistoryApi,\n            intervalTime: 7000,\n\n            isInterval: false,\n            listLoading: false,\n            singleInstallType,\n            batchInstallType,\n            statusArray: [],\n        }\n    },\n\n    components: {\n        btnGroup,\n    },\n\n    props: {\n        statusType: {\n            default: batchInstallType,\n            type: String\n        },\n\n        selectedAgentId: {\n            default: \"\",\n            type: String\n        },\n\n        groupname: {\n            default: \"\",\n            type: String\n        }\n    },\n    methods: {\n        selectItem(val) {\n            this.multipleSelection = val;\n        },\n\n        checkSelectable(row) {\n            return !row.status==0;\n        },\n\n        handleCurrentChange(currentPage){\n            if(currentPage){\n                this.currentPage = currentPage;\n            }else{\n                this.currentPage = 1\n            }\n            this.intervalGetAppStatusHistory();\n        },\n\n        deleteHistory(aisid){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('global.delete'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                    this.listLoading = true;\n                    deleteAppStatusHistoryApi(aisid).then((data) => {\n                        this.listLoading = false;\n                        handleResponse(data, (res) => {\n                            if(res.status === \"CHANGED\"){\n                                this.$swal(\"\", this.$t('global.success'), \"success\", {button: this.$t('global.confirm')}).then(() => {\n                                        this.intervalGetAppStatusHistory();\n                                })\n                            }else{\n                                _g.handleError(res);\n                            }\n                        })\n                    })\n                }\n            }) \n        },\n\n        checkAppStatusData(){\n            if(this.statusType == batchInstallType){\n                getAppStatusByTypeAndGroupApi(this.groupname, this.statusType)\n            }else{\n                getAppStatusByTypeAndDevIdApi(this.selectedAgentId, this.statusType)\n            }\n        },\n\n        getAppStatusHistoryByGroupname(){\n            if(!this.groupname){\n                console.error(\"[getAppStatusHistoryByGroupname]groupname is empty\")\n            }\n            if(this.isInterval === false){\n                this.listLoading = true;\n            }\n            \n            if(this.statusArray.length > 0){\n                getAppStatusByTypeAndPageAndStatusInGroupApi(this.groupname, this.statusType, this.currentPage, this.limit, this.statusArray).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }else{\n                getAppStatusByTypeAndPageInGroupApi(this.groupname, this.statusType, this.currentPage, this.limit).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }\n            \n        },\n\n        getAppStatusHistoryByDevid(){\n            if(!this.selectedAgentId){\n                console.error(\"[getAppStatusHistoryByDevid]selectedAgentId is empty\")\n            }\n\n            if(this.isInterval === false){\n                this.listLoading = true;\n            }\n            if(this.statusArray.length > 0){\n                getAppStatusByTypeAndPageAndStatusInDevIdApi(this.selectedAgentId, this.statusType, this.currentPage, this.limit, this.statusArray).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }else{\n                getAppStatusByTypeAndPageInDevIdApi(this.selectedAgentId, this.statusType, this.currentPage, this.limit).then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                        this.assignAppStatusData(res);\n                    })\n                })\n            }\n        },\n\n        assignAppStatusData(res){\n            if(Object.prototype.toString.call(res)  === '[object Object]'&& Object.prototype.toString.call(res.data) === '[object Array]'){\n                this.dataCount = res.count;\n                this.appStatusHistoryTableList = res.data\n                this.isshow = this.dataCount > this.limit;\n                this.isShowBtnGroup = this.dataCount > 0;\n                let isFinish = true;\n                if(this.statusType == batchInstallType){\n                    this.$emit(\"getStatusCount\")\n                }\n\n                res.data.forEach((val) => {\n                    if(val.status == 0){\n                        isFinish = false;\n                    }\n                })\n                if(isFinish){\n                    \n                    this.$emit(\"isFinished\");\n                    \n                    window.clearInterval(_g.timer);\n                    _g.timer = null;\n                }\n            }else{\n                window.clearInterval(_g.timer);\n                _g.timer = null;\n            }\n        },\n\n        intervalGetAppStatusHistory(){\n            if(this.statusType == batchInstallType){\n                this.getAppStatusHistoryByGroupname();\n                if(_g.timer === null){\n                    _g.timer = window.setInterval(() => {\n                        this.getAppStatusHistoryByGroupname();\n                        this.isInterval = true;\n                    },this.intervalTime)\n                } \n            }else{\n                this.getAppStatusHistoryByDevid();\n                if(_g.timer === null){\n                    _g.timer = window.setInterval(() => {\n                        this.getAppStatusHistoryByDevid();\n                        this.isInterval = true;\n                    },this.intervalTime)\n                }\n            }\n        },\n\n\n        filterStatus(value){\n            this.statusArray = value.status;\n            this.currentPage = 1;\n            if(_g.isArray(this.statusArray)){\n                this.intervalGetAppStatusHistory();\n            }\n        },\n\n        resetAppSensor(sensorId, selectedAgentId, appdata){\n            this.listLoading = true;\n            reExecDeviceStatus(selectedAgentId, sensorId, appdata).then((data) => {\n                this.listLoading = false;\n                handleResponse(data, (res) => {\n                    if(res.status == \"CHANGED\"){\n                        this.activeName = \"appStatusHistory\";\n                        this.currentPage = 1;\n                        this.intervalGetAppStatusHistory();\n                    }else{\n                        _g.handleError(res)\n                    }\n                })\n                \n            })\n            \n        },\n\n        reinstall(appItem){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('appControl.reinstall'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                    let appdata = {\n                        taskname: appItem.taskname,\n                        filename: appItem.filename,\n                        pkgname: appItem.pkgname,\n                        versioncode: appItem.versioncode,\n                        version: appItem.versionname,\n                        downloadpath: appItem.address,\n                    }\n                    this.resetAppSensor(appItem.target, appItem.deviceId, appdata);\n                }\n            })\n        },\n\n        //delete appstatus $emit\n        isSuccess(result){\n            if(result){\n                this.intervalGetAppStatusHistory();\n            }\n        },\n\n         //clear All history\n        clearAll(){\n            _g.swalInfoDo(this.$t('global.areYouSure'), this.$t('global.clearAll'), this.$t('global.confirm'), this.$t('global.cancel')).then((result) => {\n                if(result){\n                    this.clearLoading = true;\n                    if(this.statusType == batchInstallType){\n                        deleteAppStatusHistoryAllByGroupAndTypeApi(this.groupname, this.statusType).then((data) => {\n                            this.clearLoading = false;\n                            handleResponse((data), (res) => {\n                                if(res.status === \"CHANGED\"){\n                                    this.$swal(\"\", this.$t('global.success'), \"success\", {button: this.$t('global.confirm')}).then(() => {\n                                            this.intervalGetAppStatusHistory();\n                                    })\n                                }else{\n                                    _g.handleError(res);\n                                }\n                            })\n                        })\n                    }else{\n                        deleteAppStatusHistoryAllByDevIdAndTypeApi(this.selectedAgentId, this.statusType).then((data) => {\n                            this.clearLoading = false;\n                            handleResponse((data), (res) => {\n                                if(res.status === \"CHANGED\"){\n                                    this.$swal(\"\", this.$t('global.success'), \"success\", {button: this.$t('global.confirm')}).then(() => {\n                                            this.intervalGetAppStatusHistory();\n                                    })\n                                }else{\n                                    _g.handleError(res);\n                                }\n                            })\n                        })\n                    }  \n                }\n            })\n\n        },\n\n        initData(){\n            this.appStatusHistoryTableList = [];\n            this.isShowBtnGroup= false;\n            this.isshow= false;\n            this.isInterval = false;\n            this.currentPage = 1;\n        }\n\n\n    },\n\n    created(){\n        if(this.statusType == batchInstallType){\n            this.$emit(\"getStatusCount\")\n        }\n    },\n    beforeDestroy() {\n         window.clearInterval(_g.timer);\n        _g.timer = null;\n    },\n\n    watch: {\n        groupname(val){\n            if(val){\n                this.initData();\n                this.checkAppStatusData();\n                this.intervalGetAppStatusHistory();\n                \n            }  \n　　　　　},\n        selectedAgentId(val){\n            if(val){\n                this.initData();\n                this.checkAppStatusData();\n                this.intervalGetAppStatusHistory();\n                \n            }  \n　　　　　},\n\n    },\n        \n}\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/colors.scss\";\n    .badge{\n        display: inline-block;\n        min-width: 10px;\n        padding: 5px 8px;\n        font-size: 12px;\n        font-weight: 700;\n        line-height: 1;\n        color: #fff;\n        text-align: center;\n        white-space: nowrap;\n        vertical-align: middle;\n        // background-color: #777;\n        border-radius: 10px;\n    }\n\n    .el-loading-mask{\n        top: 60px !important;\n    }\n\n\n    \n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/deploy/appcontroldetails/history.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],ref:\"appStatusHistoryTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.appStatusHistoryTableList,\"tooltip-effect\":\"dark\",\"default-sort\":{prop: 'ts', order: 'descending'}},on:{\"selection-change\":_vm.selectItem,\"filter-change\":_vm.filterStatus}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"50\",\"selectable\":_vm.checkSelectable}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"devname\",\"label\":_vm.$t('appControl.deviceName'),\"min-width\":\"120\"}}),_vm._v(\" \"),(_vm.statusType == _vm.batchInstallType)?_c('el-table-column',{attrs:{\"prop\":\"taskname\",\"label\":_vm.$t('appControl.taskName'),\"min-width\":\"120\"}}):_vm._e(),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filename\",\"label\":_vm.$t('appControl.apkName'),\"min-width\":\"140\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"versionname\",\"label\":_vm.$t('appControl.versionName'),\"min-width\":\"105\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('appControl.beginTime'),\"min-width\":\"130\",\"prop\":\"ts\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"time\")(scope.row.ts))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"target\",\"label\":_vm.$t('appControl.function'),\"min-width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"appStatusFunction\")(scope.row.target))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"column-key\":\"status\",\"prop\":\"status\",\"label\":_vm.$t('appControl.installStatus'),\"min-width\":\"140\",\"filters\":[{ text: _vm.$t('global.success'), value: 2 }, { text: _vm.$t('global.failed'), value: 1 }, {text: _vm.$t('global.running'), value: 0}],\"filter-placement\":\"bottom-end\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.status==0)?_c('img',{staticStyle:{\"width\":\"50px\",\"height\":\"10px\"},attrs:{\"src\":require(\"@/assets/imgs/loading1.gif\"),\"alt\":\"\"}}):_vm._e(),_vm._v(\" \"),(scope.row.status==2)?_c('span',{staticClass:\"badge bg-green\"},[_vm._v(_vm._s(_vm.$t('global.success')))]):_vm._e(),_vm._v(\" \"),(scope.row.status==1)?_c('span',{staticClass:\"badge bg-DimGray\"},[_vm._v(_vm._s(_vm.$t('global.failed')))]):_vm._e()]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('appControl.errorStatus'),\"min-width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(_vm._f(\"appErrorStatus\")((\"\"+scope.row.errorcode)))+\"\\n            \")]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":_vm.$t('appControl.action'),\"min-width\":\"175\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('el-button-group',[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"disabled\":scope.row.status==0},on:{\"click\":function($event){_vm.deleteHistory(scope.row.aisid)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.$t('global.delete'))+\"\\n                        \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"disabled\":scope.row.status!=1},on:{\"click\":function($event){_vm.reinstall(scope.row)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.$t('appControl.reinstall'))+\"\\n                        \")])],1)],1)]}}])})],1),_vm._v(\" \"),_c('btn-group',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowBtnGroup),expression:\"isShowBtnGroup\"}],staticClass:\"fl m-t-10 cf\",attrs:{\"selectedData\":_vm.multipleSelection,\"isDelete\":true,\"isMove\":false,\"tid\":\"aisid\",\"delApi\":_vm.batchDeleteAppStatusHistory},on:{\"result\":_vm.isSuccess}}),_vm._v(\" \"),_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.clearLoading),expression:\"clearLoading\"},{name:\"show\",rawName:\"v-show\",value:(_vm.isShowBtnGroup),expression:\"isShowBtnGroup\"}],staticClass:\"fl m-t-10 cf m-l-10\",attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.clearAll()}}},[_vm._v(\"\\n    \"+_vm._s(_vm.$t('appControl.clearAll'))+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticClass:\"m-t-10 cf fr\"},[_c('el-pagination',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isshow),expression:\"isshow\"}],attrs:{\"layout\":\"prev, pager, next\",\"page-size\":_vm.limit,\"current-page\":_vm.currentPage,\"total\":_vm.dataCount,\"background\":\"\"},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-74c9a6df\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/deploy/appcontroldetails/history.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-74c9a6df\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./history.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./history.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./history.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-74c9a6df\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./history.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-74c9a6df\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/deploy/appcontroldetails/history.vue\n// module id = null\n// module chunks = ","<template>\n    <div v-show=\"isSingleMode\" class=\"appStatusContent p-r\">\n        <div class=\"search\" v-show=\"isShowSearchInput\"> \n            <el-input size=\"small\" class=\"w-250 m-l-10\" v-model=\"keywords\" :placeholder=\"$t('appControl.keywordHolder')\" >  \n            </el-input>\n            <i class=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n        </div>\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n            <el-tab-pane name=\"appMarket\">\n                <span slot=\"label\">\n                    <i class=\"fa fa-sellsy m-r-5\" aria-hidden=\"listLoading\"></i>\n                    {{$t('appControl.appMarket')}}\n                </span>\n                <el-table\n                    :data=\"appTableData.filter(data => !keywords || data.appname.toLowerCase().includes(keywords.toLowerCase()))\"\n                    tooltip-effect=\"dark\"\n                    style=\"width: 100%\"\n                    v-loading=\"listLoading\">\n\n                    <el-table-column\n                    label=\"\"\n                    width=\"100\"\n                    >\n                        <template slot-scope=\"scope\">\n                            <div>\n                                <img :src=\"getSrc(scope.row.raid)\" :onerror=\"defaultImg\" alt=\"no img\" style=\"width:52px\"/>\n                            </div>\n                        </template>\n                    </el-table-column>\n                    <el-table-column\n                    prop=\"appname\"\n                    :label=\"$t('appControl.appName')\"\n                    min-width=\"120\"\n                    >\n                    </el-table-column>\n                    <el-table-column\n                    prop=\"package\"\n                    :label=\"$t('appControl.packageName')\"\n                    min-width=\"120\"\n                    sortable>\n                    </el-table-column>\n\n                    <el-table-column\n                    prop=\"version\"\n                    :label=\"$t('appControl.versionName')\"\n                    min-width=\"120\"\n                    >\n                    </el-table-column>\n                    <el-table-column\n                    prop=\"type\"\n                    :label=\"$t('appControl.action')\"\n                    min-width=\"120\"\n                    :filters=\"[{ text: $t('appControl.uninstall'), value: 'uninstallApp' }, { text: $t('appControl.install'), value: 'installApp' }, { text: $t('appControl.upgrade'), value: 'upgradeApp' }]\"\n                    :filter-method=\"filterType\"\n                    filter-placement=\"bottom-end\"\n                    >\n                        <template slot-scope=\"scope\">\n                            <div>\n                                <span>\n                                    <el-button-group>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"danger\" \n                                        @click=\"appAction('uninstallApp', scope.row)\"\n                                        v-if=\"scope.row.type === 'uninstallApp'\"\n                                        :disabled=\"disableAppArray.indexOf(scope.row.package)>-1\"\n                                        >\n                                            {{$t('appControl.uninstall')}}\n                                        </el-button>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"warning\" \n                                        @click=\"appAction('upgradeApp', scope.row)\" \n                                        v-if=\"scope.row.type === 'upgradeApp'\"\n                                        >\n                                            {{$t('appControl.upgrade')}}\n                                        </el-button>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"primary\" \n                                        @click=\"appAction('installApp', scope.row)\" \n                                        v-if=\"scope.row.type === 'installApp'\"\n                                        >\n                                            {{$t('appControl.install')}}\n                                        </el-button>\n                                    </el-button-group>\n                                </span>\n                            </div>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-tab-pane>\n            <el-tab-pane name=\"appStatusHistory\">\n                <span slot=\"label\">\n                    <i class=\"fa fa-history m-r-5\" aria-hidden=\"true\"></i>\n                    {{$t('appControl.appManagerHistory')}}\n                </span>\n                <app-history\n                :statusType=\"singleInstallType\"\n                ref=\"appHistory\"\n                @isFinished=\"isFinished\"\n                :selectedAgentId=\"selectedAgentId\"\n                >\n                </app-history>\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n    \n</template>\n\n\n<script>\n    import {appControl} from '@/assets/js/lwm2mMap'\n    import {showSystemAppArray, disableAppArray} from \"@/assets/js/constant\"\n    import handleResponse from '@/components/restfulapi/handleResponse'\n    import {getDeviceStatus, setDeviceStatus, execDeviceStatus } from '@/components/restfulapi/deviceStatusApi';\n    import { androidControl } from '@/assets/js/lwm2mMap';\n    import {getRepoAppsApi, getRepoApi} from '@/components/restfulapi/getRepoAppApi';\n    import {getSession, checkSession, setSession } from '../../../assets/js/storage';\n    import {getRepoSrcApi} from \"../../restfulapi/serverConfigApi\"\n    import {singleInstallType, batchInstallType} from \"../../../assets/js/constant\";\n    import appHistory from \"./history\"\n    import cardTemp from \"../../../common/cardTemp\"\n\n    export default{\n        name: 'singleAppcontrol',\n        data(){\n            return {\n                activeName: \"appMarket\",\n                startApp: '',\n                stopApp: '',\n                enableApp: '',\n                disableApp: '',\n                appTableData: [],\n                appOptions: [],\n                disableAppArray: disableAppArray,\n\n                appGroups:[{label: \"Third Part\", value: \"third\"},{label: \"System\", value: \"system\"}],\n                defaultImg: 'this.src=\"' + 'static/imgs/default_apk.png' + '\"',\n                //history\n                singleInstallType,\n                //card\n                appType: \"uninstallApp\",\n                whitelist: false,\n                listLoading: false,\n                keywords: '',\n            }\n        },\n\n        props: {\n            selectedAgentId: {\n                type: String,\n                default: \"\"\n            },\n            isSingleMode: {\n                type: Boolean,\n                default: true\n            },\n            //selectedAgent is offline\n            isOffline: {\n                type: Boolean,\n                default: false\n            }\n        },\n        components: {\n            appHistory,\n \t        cardTemp\n        },\n\n        methods:{\n            getSensorStatus(){\n                if(!this.isSingleMode) {\n                    console.error(\"Cannot operate in a batch mode\");\n                    return;\n                }\n                if(this.selectedAgentId == \"\"){\n                    console.error(\"selectAgentId is empty\");\n                    return;\n                }\n                let AppManagementInfoArray = [];\n                let deviceAppArray = [];\n                this.listLoading = true;\n                getDeviceStatus(this.selectedAgentId, appControl[\"getAllAppInfo\"]).then((obj) => {\n                    this.listLoading = false;\n                    handleResponse(obj, (res) => {\n                        if(res.status == \"CONTENT\"){\n                            if(res.content.value){\n                                let apppackageinfo = JSON.parse(res.content.value);\n                                let allAppData = apppackageinfo.data;\n                                this.appOptions = allAppData;\n                                if(Object.prototype.toString.call(allAppData) === \"[object Array]\" && allAppData.length > 0){\n                                    allAppData.forEach((val) => {\n                                        let uninstallAppObj = {\n                                            type: 'uninstallApp',\n                                            appname: val.appName,\n                                            package: val.packageName,\n                                            versioncode: val.versionCode,\n                                            version: val.versionName,\n                                            address: \"\",\n                                            raid: \"\",\n                                            isKioskApp: val.isKioskApp,\n                                            inwhitelist: val.inWhiteList,\n                                        };\n                                        if(val.type === \"third\"){\n                                            AppManagementInfoArray.push(uninstallAppObj);\n                                        }\n                                        deviceAppArray.push(uninstallAppObj);  \n                                    })\n                                }\n                            }\n                            \n                            this.getRepoApps(AppManagementInfoArray, deviceAppArray);  \n                        }     \n                    })   \n                })\n            },\n            // Deletes an object of a particular value in array\n            removeObjInArray(originData, rem_apk_val){\n                if(Object.prototype.toString.call(originData) === \"[object Array]\"){\n                    originData.forEach((obj_val, index) => {\n                        if(obj_val.package === rem_apk_val){\n                            originData.splice(index ,1)\n                        }\n                    })\n                }else{\n                     console.error(\"data is not array\")\n                     return;\n                }\n                \n            },\n            //get repo apps\n            getRepoApps(AppManagementInfoArray, deviceAppArray){\n                if(\n                    Object.prototype.toString.call(AppManagementInfoArray) != \"[object Array]\" ||\n                    Object.prototype.toString.call(deviceAppArray) != \"[object Array]\"\n                ){\n                    console.error(\"getRepoApps　parameter is not array\")\n                    return;\n                }\n                let token;\n                let InstallAppManagementInfo = {};\n                let UpgradeAppManagementInfo = {};\n                this.listLoading = true;\n                getRepoAppsApi().then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                       if(res.status === \"success\"){\n                            let installappopt = \"\";\n                            let upgradeappopt = \"\";\n                            let lastVersionCode = [];\n                            if(Object.prototype.toString.call(res.data) === \"[object Array]\"){\n                                res.data.forEach((val) => {\n                                    let version = val.versionName != null ? val.versionName:\"\";\n                                    InstallAppManagementInfo = {\n                                        type : \"installApp\", \n                                        darkname: val.repo.darkname,\n                                        //install apk name\n                                        appname: val.filename, \n                                        package: val.pkgname, \n                                        versioncode: val.versioncode, \n                                        version: val.versionname,\n                                        address: val.address,\n                                        raid: val.raid,\n                                        isKioskApp: \"false\",\n                                        inwhitelist: \"false\",\n                                        };\n                                    AppManagementInfoArray.push(InstallAppManagementInfo);\n                         \n                                    deviceAppArray.forEach((deviceapp_val, index) => {\n                                        if(val.pkgname === deviceapp_val.package){\n                                            // pop latest app info\n                                            AppManagementInfoArray.pop();\n                                            deviceAppArray[index].address = val.address;\n                                            deviceAppArray[index].raid = val.raid;\n                                            if (Number(val.versioncode) > Number(deviceapp_val.versioncode)){\n                                                // remove install app  \n                                                // this.removeObjInArray(AppManagementInfoArray, val.pkgname);\n                                                UpgradeAppManagementInfo = {\n                                                    type : \"upgradeApp\", \n                                                    darkname: val.repo.darkname,\n                                                    appname: val.filename, \n                                                    package: val.pkgname, \n                                                    versioncode: val.versioncode, \n                                                    version: val.versionname,\n                                                    address: val.address,\n                                                    raid: val.raid,\n                                                    isKioskApp: \"false\",\n                                                    inwhitelist: \"false\",\n                                                    };\n                                                    //push update app \n                                                AppManagementInfoArray.push(UpgradeAppManagementInfo);     \n                                                \n                                            }\n                                            \n                                        }\n                                    })\n                                })\n                            }else{\n                                 console.error(\"data is not array\")\n                                 return;\n                            }\n                            \n                        }\n                        this.appTableData = AppManagementInfoArray.reverse();\n                    })\n                    \n                })\n            },\n\n            filterType(value, row){\n                return row.type === value ;\n            },\n            actionAppSensor(cid, appdata){\n                if(appControl[cid] === undefined){\n                    this.$swal(\"\", this.$t('global.functionNotSupport'), 'info', {button: this.$t('global.confirm')});\n                    return;\n                }\n                if(!this.selectedAgentId){\n                    this.$swal(\"\",this.$t('global.selectDevice'),\"info\", {button: this.$t('global.confirm')})\n                    return;\n                }\n\n                _g.swalWarnDo(this.$t('global.areYouSure'), this.$t(\"appControl.\"+cid), this.$t('global.confirm'), this.$t('global.cancel')).then((willfunc) => {\n                    if (willfunc) {\n                        _g.openGlobalLoading();\n                        execDeviceStatus(this.selectedAgentId, appControl[cid], appdata).then((data) => {\n                            handleResponse(data, (res) => {\n                                if(res.status == \"CHANGED\"){\n                                    this.activeName = \"appStatusHistory\";\n                                    this.$refs.appHistory.intervalGetAppStatusHistory();\n                                }else{\n                                    _g.handleError(res)\n                                }\n                            })\n                        })\n                    }\n                })\n            },\n\n            setAppSensor(cid, setSensorVal){\n                if(appControl[cid] === undefined){\n                    this.$swal(\"\", this.$t('global.functionNotSupport'), 'info', {button: this.$t('global.confirm')});\n                    return;\n                }\n                if(!setSensorVal){\n                    return;\n                }\n                if(this.selectedAgentId == ''){\n                    this.$swal(\"\",this.$t('global.selectDevice'),\"info\", {button: this.$t('global.confirm')})\n                    return;\n                }\n                if(cid === \"uninstallApp\" || cid === \"disableApp\"  || cid === \"stopApp\" ){\n                    _g.swalWarnDo(this.$t('global.areYouSure'), this.$t(\"appControl.\"+cid), this.$t('global.confirm'), this.$t('global.cancel')).then((willfunc) => {\n                        if (willfunc) {\n                            _g.openGlobalLoading();\n                            setDeviceStatus(this.selectedAgentId, appControl[cid], setSensorVal).then((data) => {\n                                handleResponse(data, (res) => {\n                                    if(res.status == \"CHANGED\"){\n                                        this.$swal(\"\",this.$t('global.success'),\"success\", {button: this.$t('global.confirm')}).then(() => {\n                                            if(cid === \"uninstallApp\"){\n                                                this.getSensorStatus();\n                                            }                             \n                                        })\n                                    }else{\n                                        _g.handleError(res)\n                                    }\n                                })\n                                \n                            })\n                        }\n                    })\n                }else{\n                    _g.openGlobalLoading();\n                    setDeviceStatus(this.selectedAgentId, appControl[cid], setSensorVal).then((data) => {\n                        handleResponse(data, (res) => {\n                            if(res.status == \"CHANGED\"){\n                                this.$swal(\"\",this.$t('global.success'),\"success\", {button: this.$t('global.confirm')}).then(() => {\n                                    if(cid === \"setKiosk\"|| cid === \"cancelKiosk\"){\n                                        this.getSensorStatus();\n                                    }                             \n                                })\n                            }else{\n                                _g.handleError(res)\n                            }\n                        })\n                        \n                    })\n                }\n            },\n\n            isFinished(){\n                if(this.selectedAgentId){\n                    if(!this.isOffline){\n                        this.getSensorStatus();\n\n                    }\n\n                }\n            },\n\n            appAction(cid, selectedAppData){\n\n                let setsensorval, version;\n                if(cid === \"installApp\" || cid === \"upgradeApp\"){\n                    setsensorval = selectedAppData.address;\n                    version = selectedAppData.version;\n                }else{\n                    setsensorval = selectedAppData.package;\n                    this.setAppSensor(cid, setsensorval);\n                    return;\n                }\n                let taskname = this.singleInstallType+ (new Date()).getTime();\n                let appdata = {\n                    taskname,\n                    filename: selectedAppData.appname,\n                    pkgname: selectedAppData.package,\n                    versioncode: selectedAppData.versioncode,\n                    version: version,\n                    downloadpath: setsensorval,\n\n                }\n                this.actionAppSensor(cid, appdata)\n\n                \n            },\n\n            handleCommand(command){\n                let type=command.id\n                let pkgname;\n                if(this.appType === \"system\"|| this.appType===\"desktop\"){\n                    pkgname = command.appInfo.packageName;\n                }else{\n                    pkgname = command.appInfo.package;\n                }\n                this.setAppSensor(type, pkgname)\n            },\n\n\n            getSrc(raid){\n                if(raid){\n                    let repourl =  getRepoSrcApi();\n                    return repourl+\"/getAppIcon/\"+raid;\n                }else{\n                    return 'static/imgs/default_apk.png';\n                }\n            },\n\n            initData(){\n                this.startApp = '';\n                this.stopApp = '';\n                this.enableApp = '';\n                this.disableApp = '';\n                this.appTableData = [];\n                this.appOptions = [];\n            },\n            handleClick(tab){\n                if(tab.name === \"appStatusHistory\"){\n                    this.$emit(\"isDisabled\", false)\n                }else{\n                    this.$emit(\"isDisabled\", true)\n                }\n            },\n\n            //get whitelist server status\n            getServerStatus(){\n                let sensor_key = \"whitelist\"\n                getDeviceStatus(this.selectedAgentId, androidControl[sensor_key]).then((data) => {\n                    handleResponse(data, (res) => {\n                        if(res.status === \"CONTENT\"){\n                            let status = res.content.value;\n                            if(typeof(status) === \"boolean\"){\n                                this[sensor_key] = status;\n                            }else if(status === \"true\" || status === \"false\"){\n                                this[sensor_key] = status === \"true\"? true: false;\n                            }else{\n                                this[sensor_key] = status;\n                            }\n                        }\n                    })\n                })\n                \n            },\n            disableOperation(){\n                this.$swal(\"\", this.$t('appControl.appNotInWhitelist'), 'info', {button: this.$t('global.confirm')});\n            }\n        },\n        watch: {\n            isSingleMode(val){\n                if(val){\n                    this.initData();\n                }\n            },\n            selectedAgentId(val){\n                if(this.isSingleMode) {\n                    this.initData();\n\n                    if(val&& !this.isOffline){\n                        this.getSensorStatus();\n                        this.getServerStatus();\n\n                        // this.$refs.appHistory.intervalGetAppStatusHistory();\n                    }\n                }\n            },\n           \n        },\n        computed: {\n            isShowSearchInput(){\n                if(this.activeName === \"appMarket\"){\n                    return true;\n                }else{\n                    return false;\n                }\n            }\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .noData{\n        margin-top: 30px;\n        p{\n            img{\n                width: 27px;\n                vertical-align: middle;\n            }\n            margin-bottom: 20px;\n            color: #bfbfbf;\n            font-size: 21px;\n        }\n    }\n\n    .search{\n        position: absolute;\n        top: 3px;\n        right: 15px;\n        width: 230px;\n        z-index: 1001;\n        \n        .search-icon{\n            position: absolute;\n            top: 6px;\n            right: 1px;\n            color: #ddd;\n            z-index: 10001;\n        }\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/deploy/appcontroldetails/single.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isSingleMode),expression:\"isSingleMode\"}],staticClass:\"appStatusContent p-r\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowSearchInput),expression:\"isShowSearchInput\"}],staticClass:\"search\"},[_c('el-input',{staticClass:\"w-250 m-l-10\",attrs:{\"size\":\"small\",\"placeholder\":_vm.$t('appControl.keywordHolder')},model:{value:(_vm.keywords),callback:function ($$v) {_vm.keywords=$$v},expression:\"keywords\"}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-search search-icon\",attrs:{\"aria-hidden\":\"true\"}})],1),_vm._v(\" \"),_c('el-tabs',{on:{\"tab-click\":_vm.handleClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"name\":\"appMarket\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-sellsy m-r-5\",attrs:{\"aria-hidden\":\"listLoading\"}}),_vm._v(\"\\n                \"+_vm._s(_vm.$t('appControl.appMarket'))+\"\\n            \")]),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.appTableData.filter(function (data) { return !_vm.keywords || data.appname.toLowerCase().includes(_vm.keywords.toLowerCase()); }),\"tooltip-effect\":\"dark\"}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('img',{staticStyle:{\"width\":\"52px\"},attrs:{\"src\":_vm.getSrc(scope.row.raid),\"onerror\":_vm.defaultImg,\"alt\":\"no img\"}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"appname\",\"label\":_vm.$t('appControl.appName'),\"min-width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"package\",\"label\":_vm.$t('appControl.packageName'),\"min-width\":\"120\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"version\",\"label\":_vm.$t('appControl.versionName'),\"min-width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":_vm.$t('appControl.action'),\"min-width\":\"120\",\"filters\":[{ text: _vm.$t('appControl.uninstall'), value: 'uninstallApp' }, { text: _vm.$t('appControl.install'), value: 'installApp' }, { text: _vm.$t('appControl.upgrade'), value: 'upgradeApp' }],\"filter-method\":_vm.filterType,\"filter-placement\":\"bottom-end\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('span',[_c('el-button-group',[(scope.row.type === 'uninstallApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\",\"disabled\":_vm.disableAppArray.indexOf(scope.row.package)>-1},on:{\"click\":function($event){_vm.appAction('uninstallApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.uninstall'))+\"\\n                                    \")]):_vm._e(),_vm._v(\" \"),(scope.row.type === 'upgradeApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"warning\"},on:{\"click\":function($event){_vm.appAction('upgradeApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.upgrade'))+\"\\n                                    \")]):_vm._e(),_vm._v(\" \"),(scope.row.type === 'installApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.appAction('installApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.install'))+\"\\n                                    \")]):_vm._e()],1)],1)])]}}])})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"name\":\"appStatusHistory\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-history m-r-5\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n                \"+_vm._s(_vm.$t('appControl.appManagerHistory'))+\"\\n            \")]),_vm._v(\" \"),_c('app-history',{ref:\"appHistory\",attrs:{\"statusType\":_vm.singleInstallType,\"selectedAgentId\":_vm.selectedAgentId},on:{\"isFinished\":_vm.isFinished}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-616ab46b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/deploy/appcontroldetails/single.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-616ab46b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./single.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./single.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./single.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-616ab46b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./single.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-616ab46b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/deploy/appcontroldetails/single.vue\n// module id = null\n// module chunks = ","<template>\n    <div v-show=\"!isSingleMode\" class=\"appStatusContent p-r\">\n        <div class=\"search\" v-show=\"isShowSearchInput\"> \n            <el-input size=\"small\" class=\"w-250 m-l-10\" v-model=\"keywords\" :placeholder=\"$t('appControl.keywordHolder')\" >\n            </el-input>\n            <i class=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n        </div>\n\n        <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n            <el-tab-pane name=\"appMarket\">\n                <span slot=\"label\">\n                    <i class=\"fa fa-sellsy m-r-5\" aria-hidden=\"true\"></i>\n                    {{$t('appControl.appMarket')}}\n                </span>\n                <el-table\n                    :data=\"appTableData.filter(data => !keywords || data.appname.toLowerCase().includes(keywords.toLowerCase()))\"\n                    tooltip-effect=\"dark\"\n                    style=\"width: 100%\"\n                    v-loading=\"listLoading\"\n                    >\n\n                    <el-table-column\n                    label=\"\"\n                    width=\"100\"\n                    >\n                        <template slot-scope=\"scope\">\n                            <div>\n                                <img :src=\"getSrc(scope.row.raid)\" :onerror=\"defaultImg\" alt=\"no img\" style=\"width:52px\"/>\n                            </div>\n                        </template>\n                    </el-table-column>\n                    <el-table-column\n                    prop=\"appname\"\n                    :label=\"$t('appControl.appName')\"\n                    min-width=\"120\"\n                    >\n                    </el-table-column>\n\n                    <el-table-column\n                    prop=\"package\"\n                    :label=\"$t('appControl.packageName')\"\n                    min-width=\"120\"\n                    sortable>\n                    </el-table-column>\n\n                    <el-table-column\n                    prop=\"version\"\n                    :label=\"$t('appControl.versionName')\"\n                    min-width=\"120\"\n                    >\n                    </el-table-column>\n                    <el-table-column\n                    prop=\"type\"\n                    :label=\"$t('appControl.action')\"\n                    min-width=\"120\"\n                    :filters=\"[{ text: $t('appControl.uninstall'), value: 'uninstallApp' }, { text: $t('appControl.install'), value: 'installApp' }, { text: $t('appControl.upgrade'), value: 'upgradeApp' }]\"\n                    :filter-method=\"filterType\"\n                    filter-placement=\"bottom-end\"\n                    >\n                        <template slot-scope=\"scope\">\n                            <div>\n                                <span>\n                                    <el-button-group>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"danger\" \n                                        @click=\"selectBatchInstallApp('uninstallApp', scope.row)\"\n                                        v-if=\"scope.row.type === 'uninstallApp'\"\n                                        :disabled=\"disableAppArray.indexOf(scope.row.package)>-1\"\n                                        >\n                                            {{$t('appControl.uninstall')}}\n                                        </el-button>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"warning\" \n                                        @click=\"selectBatchInstallApp('upgradeApp', scope.row)\" \n                                        v-if=\"scope.row.type === 'upgradeApp'\"\n                                        >\n                                            {{$t('appControl.upgrade')}}\n                                        </el-button>\n                                        <el-button \n                                        size=\"small\" \n                                        type=\"primary\" \n                                        @click=\"selectBatchInstallApp('installApp', scope.row)\" \n                                        v-if=\"scope.row.type === 'installApp'\"\n                                        >\n                                            {{$t('appControl.install')}}\n                                        </el-button>\n                                    </el-button-group>\n                                </span>\n                            </div>\n                        </template>\n                    </el-table-column>\n                </el-table>\n            </el-tab-pane>\n           \n            <el-tab-pane name=\"appStatusHistory\">\n                <span slot=\"label\">\n                    <i class=\"fa fa-history m-r-5\" aria-hidden=\"true\"></i>\n                    {{$t('appControl.appManagerHistory')}}\n                </span>\n                <app-history\n                :statusType=\"batchInstallType\"\n                ref=\"appHistory\"\n                @getStatusCount=\"getBatchAppStatusCount\"\n                :groupname=\"groupname\"\n                @isFinished=\"isFinished\"\n                >\n                </app-history>\n\n            </el-tab-pane>\n        </el-tabs>\n         <el-dialog :visible.sync=\"dialogTasknameVisible\" @close=\"initApkInfo()\" :close-on-click-modal=\"false\">\n            <div slot=\"title\" class=\"dialog-title\">\n                <i class=\"fa fa-level-up m-r-10\" ></i>\n                {{$t('appControl.batchInstallApk')}}\n            </div>\n            <el-form :model=\"appStatusForm\" :rules=\"rules\" ref=\"appStatusForm\">\n                <el-form-item :label=\"$t('label.taskName')\" label-width=\"230px\" prop=\"taskname\">\n                    <el-input v-model.trim=\"appStatusForm.taskname\" autocomplete=\"off\" class=\"max-w-350\" :placeholder=\"$t('appControl.installAppTaskName')\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogTasknameVisible = false\">{{$t('global.cancel')}}</el-button>\n                <el-button type=\"primary\" @click=\"batchInstallApp()\">{{$t('global.confirm')}}</el-button>\n            </div>\n        </el-dialog>\n        <div class=\"appStatusCount\" v-show=\"isShowOverview\">\n            <span>{{$t('label.taskName')}} {{local_taskname}}</span>\n            <span>{{$t('appControl.total')}} {{total}}</span>\n            <span>{{$t('appControl.deploying')}} {{installing}}</span>\n            <span>{{$t('appControl.success')}} {{success}}</span>\n            <span>{{$t('appControl.failed')}} {{failed}}</span>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/colors.scss\";\n    .appStatusContent{\n        position: relative;\n        .appStatusCount{\n            position: absolute;\n            top: 10px;\n            right: 6px;\n            span{\n                font-weight: 500;\n                font-size: 11px;\n                &:nth-child(1){\n                    color: $primary-color;\n                }\n                &:nth-child(2){\n                    border-left: 2px solid #ddd;\n                    padding-left: 3px; \n                    color: $info-color;\n                }\n                &:nth-child(3){\n                    color: $warn-color;\n                }\n                &:nth-child(4){\n                    color: $success-color;\n                }\n                &:nth-child(5){\n                    color: $darkgray-color;\n                }\n            }\n            \n        }\n    }\n\n    .search{\n        position: absolute;\n        top: 3px;\n        right: 15px;\n        width: 230px;\n        z-index: 1001;\n        .search-icon{\n            position: absolute;\n            top: 6px;\n            right: 1px;\n            color: #ddd;\n            z-index: 10001;\n        }\n    }\n    .noData{\n        margin-top: 30px;\n        p{\n            img{\n                width: 27px;\n                vertical-align: middle;\n            }\n            margin-bottom: 20px;\n            color: #bfbfbf;\n            font-size: 21px;\n        }\n    }\n\n</style>\n\n<script>\n    import {appControl, androidControl} from '@/assets/js/lwm2mMap'\n    import handleResponse from '@/components/restfulapi/handleResponse'\n    import {showSystemAppArray, disableAppArray} from \"@/assets/js/constant\"\n\n    import {getRepoAppsApi, getRepoApi} from '@/components/restfulapi/getRepoAppApi'\n    import{getAppStatusOverviewApi} from \"@/components/restfulapi/appStatusApi\"\n\n    import {getDeviceStatus, setDeviceStatus, batchExecDeviceStatus} from '@/components/restfulapi/deviceStatusApi';\n    import {setLocal, getLocal, getSession, checkSession, setSession} from \"../../../assets/js/storage\"\n    import {getRepoSrcApi} from \"../../restfulapi/serverConfigApi\"\n\n\n    import {singleInstallType, batchInstallType} from \"../../../assets/js/constant\"\n    import appHistory from \"./history\"\n    import cardTemp from \"../../../common/cardTemp\"\n    export default{\n        name: 'batchAppcontrol',\n        data(){\n            let validateTaskname = (rule,value,callback)=>{\n                let reg=new RegExp(/^(?![._-\\s])[\\u4E00-\\u9FA5A-Za-z0-9_\\-\\.\\s]{1,12}$/);\n                if(!reg.test(value)){\n                    return callback(new Error (this.$t('global.verifyShortError')))\n                }else{callback()};\n            };\n            return {\n                activeName: \"appMarket\",\n                appTableData: [],\n\n                defaultImg: 'this.src=\"' + 'static/imgs/default_apk.png' + '\"',\n                dialogTasknameVisible: false,\n                //app status history\n                filename: '',\n                pkgname: '',\n                version: '',\n                address: '',\n                versioncode: '',\n                //batch installapp\n                appStatusForm:{\n                    taskname: '',\n                },\n                rules:{\n                    taskname: {required: true, validator: validateTaskname, trigger: 'blur'}\n                },\n\n                batchInstallType: batchInstallType,\n                cid: \"\",\n                appOptions: [],\n                disableAppArray: disableAppArray,\n                appType: \"uninstallApp\",\n                whitelist: false,\n                //installstatus count show\n                isShowOverview: false,\n                local_taskname: '',\n                success: 0,\n                installing: 0,\n                failed: 0,\n                listLoading: false,\n                keywords: '',\n\n            }\n        },\n\n        props:{\n            selectedAgentsData: {\n                type: Array,\n                default: []\n            },\n            groupname: {\n                type: String,\n                default: \"\"\n            }, \n            isSingleMode: {\n                type: Boolean,\n                default: true\n            }\n        },\n\n        components: {\n            appHistory,\n            cardTemp\n        },\n\n        methods:{\n            handleCommand(command){\n                let appInfo=command.appInfo;\n                this.cid = command.id;\n                //package is diff in system and third\n                if(this.appType === \"system\"|| this.appType===\"desktop\"){\n                    this.address = \"\";\n                    this.filename = appInfo.appName;\n                    this.pkgname = appInfo.packageName;\n                    this.version = appInfo.versionName;\n                    this.versioncode = appInfo.versionCode;\n                }else{\n                    this.address = appInfo.address;\n                    this.filename = appInfo.appname;\n                    this.pkgname = appInfo.package;\n                    this.version = appInfo.version;\n                    this.versioncode = appInfo.versioncode;\n                }\n\n                this.appStatusForm.taskname = \"\";\n                this.dialogTasknameVisible = true;\n\n            },\n\n            filterType(value, row){\n                return row.type === value ;\n            },\n\n            getSensorStatus(){\n                if(this.isSingleMode) {\n                    console.error(\"Cannot operate in a single mode\");\n                    return;\n                }\n                if(this.selectedAgentsData.length == 0){\n                    console.error(\"getSensorStatus: agentData is null\");\n                    return;\n                }\n                let AppManagementInfoArray = [];\n                let deviceAppArray = [];\n                this.listLoading = true;\n                getDeviceStatus(this.selectedAgentsData[0].value, appControl[\"getAllAppInfo\"]).then((obj) => {\n                    this.listLoading = false;\n                    handleResponse(obj, (res) => {\n                        if(res.status == \"CONTENT\"){\n                            if(res.content.value){\n                                let apppackageinfo = JSON.parse(res.content.value);\n                                let allAppData = apppackageinfo.data;\n                                this.appOptions = allAppData;\n                                if(Object.prototype.toString.call(allAppData) === \"[object Array]\" && allAppData.length > 0){\n                                    allAppData.forEach((val) => {\n                                        let uninstallAppObj = {\n                                            type: 'uninstallApp',\n                                            appname: val.appName,\n                                            package: val.packageName,\n                                            versioncode: val.versionCode,\n                                            version: val.versionName,\n                                            address: \"\",\n                                            raid: \"\",\n                                            isKioskApp: val.isKioskApp,\n                                            inwhitelist: val.inWhiteList,\n                                        };\n                                        if(val.type === \"third\"){\n                                            AppManagementInfoArray.push(uninstallAppObj);\n                                        }\n                                        deviceAppArray.push(uninstallAppObj);                            \n                                            \n                                    })\n                                }\n                            }\n                        }\n                        this.getRepoApps(AppManagementInfoArray, deviceAppArray);  \n                    })   \n                })\n            },\n            \n            // Deletes an object of a particular value in array\n            removeObjInArray(originData, rem_apk_val){\n                if(Object.prototype.toString.call(originData) === \"[object Array]\"){\n                    originData.forEach((obj_val, index) => {\n                        if(obj_val.package === rem_apk_val){\n                            originData.splice(index ,1)\n                        }\n                    })\n                }else{\n                     console.error(\"data is not array\")\n                     return;\n                }\n                \n            },\n            //get repo apps\n            getRepoApps(AppManagementInfoArray, deviceAppArray){\n                if(\n                    Object.prototype.toString.call(AppManagementInfoArray) != \"[object Array]\" ||\n                    Object.prototype.toString.call(deviceAppArray) != \"[object Array]\"\n                ){\n                    console.error(\"getRepoApps parameter is not array\")\n                    return;\n                }\n                let token;\n                let InstallAppManagementInfo = {};\n                let UpgradeAppManagementInfo = {};\n                this.listLoading = true;\n                getRepoAppsApi().then((data) => {\n                    this.listLoading = false;\n                    handleResponse(data, (res) => {\n                       if(res.status === \"success\"){\n                            let installappopt = \"\";\n                            let upgradeappopt = \"\";\n                            let lastVersionCode = [];\n                            if(Object.prototype.toString.call(res.data) === \"[object Array]\"){\n                                res.data.forEach((val) => {\n                                    let version = val.versionName != null ? val.versionName:\"\";\n                                    InstallAppManagementInfo = {\n                                        type : \"installApp\", \n                                        darkname: val.repo.darkname,\n                                        //install apk name\n                                        appname: val.filename, \n                                        package: val.pkgname, \n                                        versioncode: val.versioncode, \n                                        version: val.versionname,\n                                        address: val.address,\n                                        raid: val.raid,\n                                        isKioskApp: \"false\",\n                                        inwhitelist: \"false\",\n                                        };\n                                    AppManagementInfoArray.push(InstallAppManagementInfo);\n                         \n                                    deviceAppArray.forEach((deviceapp_val, index) => {\n                                        if(val.pkgname === deviceapp_val.package){\n                                            // pop latest app info\n                                            AppManagementInfoArray.pop();\n                                            deviceAppArray[index].address = val.address;\n                                            deviceAppArray[index].raid = val.raid;\n                                            if (Number(val.versioncode) > Number(deviceapp_val.versioncode)){\n                                                // remove install app  \n                                                // this.removeObjInArray(AppManagementInfoArray, val.pkgname);\n                                                UpgradeAppManagementInfo = {\n                                                    type : \"upgradeApp\", \n                                                    darkname: val.repo.darkname,\n                                                    appname: val.filename, \n                                                    package: val.pkgname, \n                                                    versioncode: val.versioncode, \n                                                    version: val.versionname,\n                                                    address: val.address,\n                                                    raid: val.raid,\n                                                    isKioskApp: \"false\",\n                                                    inwhitelist: \"false\",\n                                                    };\n                                                    //push update app \n                                                AppManagementInfoArray.push(UpgradeAppManagementInfo);     \n                                                \n                                            }\n                                            \n                                        }\n                                    })\n                                })\n                            }\n                            \n                        }\n                        this.appTableData = AppManagementInfoArray.reverse();\n                    })\n                    \n                })\n            },\n\t\n            //batch install app\n            batchSetAppSensor(cid, setSensorVal){\n                if(appControl[cid] === undefined){\n                    this.$swal(\"\", this.$t('global.functionNotSupport'), 'info', {button: this.$t('global.confirm')});\n                    return;\n                }\n                _g.openGlobalLoading();\n                \n                let appdata = {\n                    groupname: this.groupname,\n                    taskname: this.appStatusForm.taskname,\n                    filename: this.filename,\n                    pkgname: this.pkgname,\n                    version: this.version,\n                    versioncode: this.versioncode,\n                    downloadpath: setSensorVal,\n                }  \n                let taskname = this.appStatusForm.taskname;\n                this.dialogTasknameVisible = false;                  \n                batchExecDeviceStatus(appControl[cid], appdata).then((data) => {\n                    handleResponse(data, (res) => {\n                        if(res.status == \"CHANGED\"){\n                            //show overview\n                            setLocal(\"local_taskname\", taskname);\n                            this.activeName = \"appStatusHistory\";\n                            this.$refs.appHistory.intervalGetAppStatusHistory();\n                        }else{\n                            _g.handleError(res);\n                        }\n                    })\n                    \n                })        \n            \n                               \n            },\n\n            batchInstallApp(){\n                if(this.selectedAgentsData.length === 0){\n                    this.$swal(\"\", this.$t('global.devicesOffline'),\"info\", {button: this.$t('global.confirm')});\n                    return;\n                }\n                this.$refs.appStatusForm.validate((valid) => {\n                    if(valid) {\n                        this.batchSetAppSensor(this.cid, this.address);\n                        \n                    }\n                })\n            },\n            \n            selectBatchInstallApp(type, selectedAppData){\n                this.cid = type;\n                this.address = selectedAppData.address;\n                this.filename = selectedAppData.appname;\n                this.pkgname = selectedAppData.package;\n                this.version = selectedAppData.version;\n                this.versioncode = selectedAppData.versioncode;\n                this.appStatusForm.taskname = \"\";\n                this.dialogTasknameVisible = true;\n            },\n\n            initApkInfo(){\n                this.filename = \"\";\n                this.pkgname = \"\";\n                this.version = \"\";\n                this.address = \"\";\n                this.appStatusForm.taskname = \"\";\n                this.cid = \"\";\n            },\n\n             //get updatedp status count\n            getBatchAppStatusCount(){\n                let local_taskname = getLocal(\"local_taskname\");\n                if(!local_taskname){\n                    console.error(\"getBatchAppStatusCount:localStorage(local_taskname) is null\")\n                    this.isShowOverview = false;\n                    return;\n                }\n                getAppStatusOverviewApi(local_taskname, batchInstallType).then((data) => {\n                    handleResponse((data), (res) => {\n                        if(res){\n                            this.local_taskname = local_taskname;\n\n                            this.installing = res.installing;\n                            this.failed = res.fail;\n                            this.success = res.success;\n                            if(this.total > 0 &&  this.activeName === \"appStatusHistory\"){\n                                this.isShowOverview = true;\n                            }else{\n                                this.isShowOverview = false;\n                            }\n                        }\n                    })\n                })\n            },\n            \n            initData(){\n                this.appTableData = [];\n            },\n\n            getSrc(raid){\n\n                if(raid){\n                     let repourl =  getRepoSrcApi();\n                    return repourl+\"/getAppIcon/\"+raid;\n                }else{\n                    return 'static/imgs/default_apk.png';\n                }                \n            },\n            handleClick(tab){\n                if(tab.name === \"appStatusHistory\"){\n                    this.getBatchAppStatusCount();\n                }else{\n                    this.isShowOverview = false;\n                }\n            },\n            isFinished(){\n                this.getSensorStatus();  \n            },\n            //get whitelist server status\n            getServerStatus(){\n                if(this.selectedAgentsData.length == 0){\n                    console.error(\"getServerStatus: agentData is null\");\n                    return;\n                }\n                let sensor_key = \"whitelist\"\n                getDeviceStatus(this.selectedAgentsData[0].value, androidControl[sensor_key]).then((data) => {\n                    handleResponse(data, (res) => {\n                        if(res.status === \"CONTENT\"){\n                            let status = res.content.value;\n                            if(typeof(status) === \"boolean\"){\n                                this[sensor_key] = status;\n                            }else if(status === \"true\" || status === \"false\"){\n                                this[sensor_key] = status === \"true\"? true: false;\n                            }else{\n                                this[sensor_key] = status;\n                            }\n                        }\n                    })\n                })\n                \n            },\n\n            disableOperation(){\n                this.$swal(\"\", this.$t('appControl.appNotInWhitelist'), 'info', {button: this.$t('global.confirm')});\n            },\n\n        },\n       \n        computed: {\n\n            isShowSearchInput(){\n                if(this.activeName === \"appMarket\"){\n                    return true;\n                }else{\n                    return false;\n                }\n            },\n            total(){\n                return  this.success+ this.installing+ this.failed;\n            }\n\n        },\n       \n        watch: {\n            isSingleMode(val){\n                if(!val){\n                    this.initData();\n                }\n            },\n            groupname(val){\n                if(!this.isSingleMode&& val){\n                    this.initData();\n                    this.getSensorStatus();\n                    this.getServerStatus();\n                }\n            }\n        }\n\n    }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/deploy/appcontroldetails/batch.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isSingleMode),expression:\"!isSingleMode\"}],staticClass:\"appStatusContent p-r\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowSearchInput),expression:\"isShowSearchInput\"}],staticClass:\"search\"},[_c('el-input',{staticClass:\"w-250 m-l-10\",attrs:{\"size\":\"small\",\"placeholder\":_vm.$t('appControl.keywordHolder')},model:{value:(_vm.keywords),callback:function ($$v) {_vm.keywords=$$v},expression:\"keywords\"}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-search search-icon\",attrs:{\"aria-hidden\":\"true\"}})],1),_vm._v(\" \"),_c('el-tabs',{on:{\"tab-click\":_vm.handleClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"name\":\"appMarket\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-sellsy m-r-5\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n                \"+_vm._s(_vm.$t('appControl.appMarket'))+\"\\n            \")]),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.appTableData.filter(function (data) { return !_vm.keywords || data.appname.toLowerCase().includes(_vm.keywords.toLowerCase()); }),\"tooltip-effect\":\"dark\"}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('img',{staticStyle:{\"width\":\"52px\"},attrs:{\"src\":_vm.getSrc(scope.row.raid),\"onerror\":_vm.defaultImg,\"alt\":\"no img\"}})])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"appname\",\"label\":_vm.$t('appControl.appName'),\"min-width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"package\",\"label\":_vm.$t('appControl.packageName'),\"min-width\":\"120\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"version\",\"label\":_vm.$t('appControl.versionName'),\"min-width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":_vm.$t('appControl.action'),\"min-width\":\"120\",\"filters\":[{ text: _vm.$t('appControl.uninstall'), value: 'uninstallApp' }, { text: _vm.$t('appControl.install'), value: 'installApp' }, { text: _vm.$t('appControl.upgrade'), value: 'upgradeApp' }],\"filter-method\":_vm.filterType,\"filter-placement\":\"bottom-end\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('span',[_c('el-button-group',[(scope.row.type === 'uninstallApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"danger\",\"disabled\":_vm.disableAppArray.indexOf(scope.row.package)>-1},on:{\"click\":function($event){_vm.selectBatchInstallApp('uninstallApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.uninstall'))+\"\\n                                    \")]):_vm._e(),_vm._v(\" \"),(scope.row.type === 'upgradeApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"warning\"},on:{\"click\":function($event){_vm.selectBatchInstallApp('upgradeApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.upgrade'))+\"\\n                                    \")]):_vm._e(),_vm._v(\" \"),(scope.row.type === 'installApp')?_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":function($event){_vm.selectBatchInstallApp('installApp', scope.row)}}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.$t('appControl.install'))+\"\\n                                    \")]):_vm._e()],1)],1)])]}}])})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"name\":\"appStatusHistory\"}},[_c('span',{attrs:{\"slot\":\"label\"},slot:\"label\"},[_c('i',{staticClass:\"fa fa-history m-r-5\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n                \"+_vm._s(_vm.$t('appControl.appManagerHistory'))+\"\\n            \")]),_vm._v(\" \"),_c('app-history',{ref:\"appHistory\",attrs:{\"statusType\":_vm.batchInstallType,\"groupname\":_vm.groupname},on:{\"getStatusCount\":_vm.getBatchAppStatusCount,\"isFinished\":_vm.isFinished}})],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"visible\":_vm.dialogTasknameVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.dialogTasknameVisible=$event},\"close\":function($event){_vm.initApkInfo()}}},[_c('div',{staticClass:\"dialog-title\",attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('i',{staticClass:\"fa fa-level-up m-r-10\"}),_vm._v(\"\\n            \"+_vm._s(_vm.$t('appControl.batchInstallApk'))+\"\\n        \")]),_vm._v(\" \"),_c('el-form',{ref:\"appStatusForm\",attrs:{\"model\":_vm.appStatusForm,\"rules\":_vm.rules}},[_c('el-form-item',{attrs:{\"label\":_vm.$t('label.taskName'),\"label-width\":\"230px\",\"prop\":\"taskname\"}},[_c('el-input',{staticClass:\"max-w-350\",attrs:{\"autocomplete\":\"off\",\"placeholder\":_vm.$t('appControl.installAppTaskName')},model:{value:(_vm.appStatusForm.taskname),callback:function ($$v) {_vm.$set(_vm.appStatusForm, \"taskname\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"appStatusForm.taskname\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogTasknameVisible = false}}},[_vm._v(_vm._s(_vm.$t('global.cancel')))]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.batchInstallApp()}}},[_vm._v(_vm._s(_vm.$t('global.confirm')))])],1)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isShowOverview),expression:\"isShowOverview\"}],staticClass:\"appStatusCount\"},[_c('span',[_vm._v(_vm._s(_vm.$t('label.taskName'))+\" \"+_vm._s(_vm.local_taskname))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('appControl.total'))+\" \"+_vm._s(_vm.total))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('appControl.deploying'))+\" \"+_vm._s(_vm.installing))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('appControl.success'))+\" \"+_vm._s(_vm.success))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.$t('appControl.failed'))+\" \"+_vm._s(_vm.failed))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-4d7b50d6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/deploy/appcontroldetails/batch.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4d7b50d6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./batch.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./batch.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./batch.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4d7b50d6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./batch.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4d7b50d6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/deploy/appcontroldetails/batch.vue\n// module id = null\n// module chunks = ","<template>\n    <div class=\"content-box\">\n        <div class=\"title-box\">\n            <p class=\"header-line\">\n                <i class=\"fa fa-sliders m-r-10\" ></i>\n                {{$t('appControl.appDeploy')}}\n                \n            </p>\n        </div>\n        \n        <div class=\"select-box\">\n            <mode-switch @mode-status=\"changeMode\" ></mode-switch>\n            <span class=\"vertical\"></span>\n            <select-group \n            @select-getDeviceOptions=\"getGroupOption\" \n            @select-getGroupName=\"getGroupName\" \n            :isSingleMode=\"isSingleMode\"\n            :groupType=\"groupTypeArray\">\n            </select-group>\n            <select-device \n            @select-device=\"getDeviceOption\"\n            @isOfflineDev=\"isOfflineDev\" \n            :isSingleMode=\"isSingleMode\"\n            :isDisabledOffDev=\"isDisabledOffDev\"\n            :groupType=\"groupType\">\n            </select-device>\n        </div>\n\n        <div class=\"table-box\" >\n            <single-control \n            :selectedAgentId=\"selectedAgentId\" \n            :isSingleMode=\"isSingleMode\"\n            @isDisabled=\"isDisabled\"\n            :isOffline=\"isOffline\">\n            </single-control>\n            <batch-control \n            :selectedAgentsData=\"selectedAgentsData\" \n            :isSingleMode=\"isSingleMode\"\n            :groupname=\"groupname\"\n            ></batch-control>\n        </div>\n    </div>\n</template>\n<style lang=\"scss\" scoped>\n@import \"../../assets/css/colors\"; \n    \n</style>\n<script>\n    import selectDevice from '../../common/select-device'\n    import modeSwitch from \"../../common/mode-switch\"\n    import selectGroup from \"../../common/select-group\"\n    import singleControl from \"./appcontroldetails/single\"\n    import batchControl from \"./appcontroldetails/batch\"\n    import {groupType} from \"../../assets/js/constant\"\n\n    export default{\n        name: 'controlAppcontrol',\n        data(){\n            return {\n                selectedAgentId: '',\n                selectedAgentsData: [],\n                isSingleMode: true,\n                groupname: '',\n                //offline device is disabled\n                isDisabledOffDev: true,\n                //selectedAgent is offline\n                isOffline: false,\n                groupType: groupType.android,\n                groupTypeArray: [groupType.android]\n            }\n        },\n        components:{\n            selectDevice,\n            selectGroup,\n            modeSwitch,\n            singleControl,\n            batchControl\n        },\n        methods:{\n\n            getDeviceOption(selectedAgentId){ \n                this.selectedAgentId = selectedAgentId;\n            },\n\n            getGroupOption(selectedAgentsData){\n                this.selectedAgentsData = selectedAgentsData;\n            },\n\n            initData(){\n                this.selectedAgentId = \"\";\n                this.groupname = \"\";\n                this.selectedAgentsData = [];\n            },\n\n            changeMode(val){\n                this.initData();\n                this.isSingleMode = !val\n            },\n\n            getGroupName(groupname){\n                this.groupname = groupname;\n            },\n\n            isDisabled(value){\n                this.isDisabledOffDev = value;\n            },\n            isOfflineDev(value){\n                this.isOffline = value\n            }\n            \n        },\n\n    }\n</script>\n\n\n\n\n\n// WEBPACK FOOTER //\n// src/components/deploy/appcontrol.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-box\"},[_c('div',{staticClass:\"title-box\"},[_c('p',{staticClass:\"header-line\"},[_c('i',{staticClass:\"fa fa-sliders m-r-10\"}),_vm._v(\"\\n            \"+_vm._s(_vm.$t('appControl.appDeploy'))+\"\\n            \\n        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"select-box\"},[_c('mode-switch',{on:{\"mode-status\":_vm.changeMode}}),_vm._v(\" \"),_c('span',{staticClass:\"vertical\"}),_vm._v(\" \"),_c('select-group',{attrs:{\"isSingleMode\":_vm.isSingleMode,\"groupType\":_vm.groupTypeArray},on:{\"select-getDeviceOptions\":_vm.getGroupOption,\"select-getGroupName\":_vm.getGroupName}}),_vm._v(\" \"),_c('select-device',{attrs:{\"isSingleMode\":_vm.isSingleMode,\"isDisabledOffDev\":_vm.isDisabledOffDev,\"groupType\":_vm.groupType},on:{\"select-device\":_vm.getDeviceOption,\"isOfflineDev\":_vm.isOfflineDev}})],1),_vm._v(\" \"),_c('div',{staticClass:\"table-box\"},[_c('single-control',{attrs:{\"selectedAgentId\":_vm.selectedAgentId,\"isSingleMode\":_vm.isSingleMode,\"isOffline\":_vm.isOffline},on:{\"isDisabled\":_vm.isDisabled}}),_vm._v(\" \"),_c('batch-control',{attrs:{\"selectedAgentsData\":_vm.selectedAgentsData,\"isSingleMode\":_vm.isSingleMode,\"groupname\":_vm.groupname}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-e8704942\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/deploy/appcontrol.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e8704942\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./appcontrol.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./appcontrol.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./appcontrol.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e8704942\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./appcontrol.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e8704942\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/deploy/appcontrol.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}